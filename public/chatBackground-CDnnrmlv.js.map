{"version":3,"file":"chatBackground-CDnnrmlv.js","sources":["../src/helpers/dom/focusInput.ts","../src/vendor/solid-transition-group/common.ts","../node_modules/.pnpm/@solid-primitives+transition-group@1.0.3_solid-js@1.9.5/node_modules/@solid-primitives/transition-group/dist/index.js","../src/vendor/solid-transition-group/transition.ts","../src/components/chat/patternRenderer.ts","../src/lib/chatBackgroundStore.ts","../src/helpers/easing/easeOutQuad.ts","../src/components/chat/gradientRenderer.ts","../src/helpers/averageColor.ts","../src/helpers/highlightingColor.ts","../src/components/chat/bubbles/chatBackground.tsx"],"sourcesContent":["import placeCaretAtEnd from './placeCaretAtEnd';\n\nexport default function focusInput(input: HTMLElement, e?: KeyboardEvent) {\n  input.focus();\n  placeCaretAtEnd(input);\n\n  if(e) {\n    // clone and dispatch same event to new input. it is needed for sending message if input was blurred\n    const newEvent = new KeyboardEvent(e.type, e);\n    input.dispatchEvent(newEvent);\n  }\n}\n","// https://github.com/solidjs-community/solid-transition-group\n\nimport {createMemo} from 'solid-js';\nimport type {TransitionEvents, TransitionProps} from './transition';\n// import type {TransitionGroupProps} from './transitionGroup';\n\nexport function createClassnames(props: TransitionProps/*  & TransitionGroupProps */) {\n  return createMemo(() => {\n    const name = props.name || 's';\n    return {\n      enterActive: (props.enterActiveClass || name + '-enter-active').split(' '),\n      enter: (props.enterClass || name + '-enter').split(' '),\n      enterTo: (props.enterToClass || name + '-enter-to').split(' '),\n      exitActive: (props.exitActiveClass || name + '-exit-active').split(' '),\n      exit: (props.exitClass || name + '-exit').split(' '),\n      exitTo: (props.exitToClass || name + '-exit-to').split(' ')\n      // move: (props.moveClass || name + '-move').split(' ')\n    };\n  });\n}\n\n// https://github.com/solidjs-community/solid-transition-group/issues/12\n// for the css transition be triggered properly on firefox\n// we need to wait for two frames before changeing classes\nexport function nextFrame(fn: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(fn));\n}\n\n/**\n * Run an enter transition on an element - common for both Transition and TransitionGroup\n */\nexport function enterTransition(\n  classes: ReturnType<ReturnType<typeof createClassnames>>,\n  events: TransitionEvents,\n  el: Element,\n  done?: VoidFunction,\n  duration?: number\n) {\n  const {onBeforeEnter, onEnter, onAfterEnter} = events;\n\n  let timeout: number;\n\n  // before the elements are added to the DOM\n  onBeforeEnter?.(el);\n\n  el.classList.add(...classes.enter);\n  el.classList.add(...classes.enterActive);\n\n  // after the microtask the elements will be added to the DOM\n  // and onEnter will be called in the same frame\n  queueMicrotask(() => {\n    // Don't animate element if it's not in the DOM\n    // This can happen when elements are changed under Suspense\n    if(!el.parentNode) return done?.();\n\n    onEnter?.(el, () => endTransition());\n  });\n\n  nextFrame(() => {\n    el.classList.remove(...classes.enter);\n    el.classList.add(...classes.enterTo);\n\n    if(!onEnter || onEnter.length < 2) {\n      el.addEventListener('transitionend', endTransition);\n      el.addEventListener('animationend', endTransition);\n\n      if(duration !== undefined) {\n        timeout = window.setTimeout(() => endTransition(), duration);\n      }\n    }\n  });\n\n  function endTransition(e?: Event) {\n    if(!e || e.target === el) {\n      clearTimeout(timeout);\n      done?.(); // starts exit transition in \"in-out\" mode\n      el.removeEventListener('transitionend', endTransition);\n      el.removeEventListener('animationend', endTransition);\n      el.classList.remove(...classes.enterActive);\n      el.classList.remove(...classes.enterTo);\n      onAfterEnter?.(el);\n    }\n  }\n}\n\n/**\n * Run an exit transition on an element - common for both Transition and TransitionGroup\n */\nexport function exitTransition(\n  classes: ReturnType<ReturnType<typeof createClassnames>>,\n  events: TransitionEvents,\n  el: Element,\n  done?: VoidFunction,\n  duration?: number\n) {\n  const {onBeforeExit, onExit, onAfterExit} = events;\n\n  // Don't animate element if it's not in the DOM\n  // This can happen when elements are changed under Suspense\n  if(!el.parentNode) return done?.();\n\n  let timeout: number;\n\n  onBeforeExit?.(el);\n\n  el.classList.add(...classes.exit);\n  el.classList.add(...classes.exitActive);\n\n  onExit?.(el, () => endTransition());\n\n  nextFrame(() => {\n    el.classList.remove(...classes.exit);\n    el.classList.add(...classes.exitTo);\n\n    if(!onExit || onExit.length < 2) {\n      el.addEventListener('transitionend', endTransition);\n      el.addEventListener('animationend', endTransition);\n\n      if(duration !== undefined) {\n        timeout = window.setTimeout(() => endTransition(), duration);\n      }\n    }\n  });\n\n  function endTransition(e?: Event) {\n    if(!e || e.target === el) {\n      // calling done() will remove element from the DOM,\n      // but also trigger onChange callback in <TransitionGroup>.\n      // Which is why the classes need to removed afterwards,\n      // so that removing them won't change el styles when for the move transition\n      clearTimeout(timeout);\n      done?.();\n      el.removeEventListener('transitionend', endTransition);\n      el.removeEventListener('animationend', endTransition);\n      el.classList.remove(...classes.exitActive);\n      el.classList.remove(...classes.exitTo);\n      onAfterExit?.(el);\n    }\n  }\n}\n","import { untrack, createSignal, useTransition, createComputed, batch, createMemo, $TRACK } from 'solid-js';\nimport { isServer } from 'solid-js/web';\n\n// src/index.ts\nvar noop = () => {\n};\nvar noopTransition = (el, done) => done();\nfunction createSwitchTransition(source, options) {\n  const initSource = untrack(source);\n  const initReturned = initSource ? [initSource] : [];\n  if (isServer) {\n    return () => initReturned;\n  }\n  const { onEnter = noopTransition, onExit = noopTransition } = options;\n  const [returned, setReturned] = createSignal(\n    options.appear ? [] : initReturned\n  );\n  const [isTransitionPending] = useTransition();\n  let next;\n  let isExiting = false;\n  function exitTransition(el, after) {\n    if (!el)\n      return after && after();\n    isExiting = true;\n    onExit(el, () => {\n      batch(() => {\n        isExiting = false;\n        setReturned((p) => p.filter((e) => e !== el));\n        after && after();\n      });\n    });\n  }\n  function enterTransition(after) {\n    const el = next;\n    if (!el)\n      return after && after();\n    next = void 0;\n    setReturned((p) => [el, ...p]);\n    onEnter(el, after ?? noop);\n  }\n  const triggerTransitions = options.mode === \"out-in\" ? (\n    // exit -> enter\n    (prev) => isExiting || exitTransition(prev, enterTransition)\n  ) : options.mode === \"in-out\" ? (\n    // enter -> exit\n    (prev) => enterTransition(() => exitTransition(prev))\n  ) : (\n    // exit & enter\n    (prev) => {\n      exitTransition(prev);\n      enterTransition();\n    }\n  );\n  createComputed(\n    (prev) => {\n      const el = source();\n      if (untrack(isTransitionPending)) {\n        isTransitionPending();\n        return prev;\n      }\n      if (el !== prev) {\n        next = el;\n        batch(() => untrack(() => triggerTransitions(prev)));\n      }\n      return el;\n    },\n    options.appear ? void 0 : initSource\n  );\n  return returned;\n}\nfunction createListTransition(source, options) {\n  const initSource = untrack(source);\n  if (isServer) {\n    const copy = initSource.slice();\n    return () => copy;\n  }\n  const { onChange } = options;\n  let prevSet = new Set(options.appear ? void 0 : initSource);\n  const exiting = /* @__PURE__ */ new WeakSet();\n  const [toRemove, setToRemove] = createSignal([], { equals: false });\n  const [isTransitionPending] = useTransition();\n  const finishRemoved = options.exitMethod === \"remove\" ? noop : (els) => {\n    setToRemove((p) => (p.push.apply(p, els), p));\n    for (const el of els)\n      exiting.delete(el);\n  };\n  const handleRemoved = options.exitMethod === \"remove\" ? noop : options.exitMethod === \"keep-index\" ? (els, el, i) => els.splice(i, 0, el) : (els, el) => els.push(el);\n  return createMemo(\n    (prev) => {\n      const elsToRemove = toRemove();\n      const sourceList = source();\n      sourceList[$TRACK];\n      if (untrack(isTransitionPending)) {\n        isTransitionPending();\n        return prev;\n      }\n      if (elsToRemove.length) {\n        const next = prev.filter((e) => !elsToRemove.includes(e));\n        elsToRemove.length = 0;\n        onChange({ list: next, added: [], removed: [], unchanged: next, finishRemoved });\n        return next;\n      }\n      return untrack(() => {\n        const nextSet = new Set(sourceList);\n        const next = sourceList.slice();\n        const added = [];\n        const removed = [];\n        const unchanged = [];\n        for (const el of sourceList) {\n          (prevSet.has(el) ? unchanged : added).push(el);\n        }\n        let nothingChanged = !added.length;\n        for (let i = 0; i < prev.length; i++) {\n          const el = prev[i];\n          if (!nextSet.has(el)) {\n            if (!exiting.has(el)) {\n              removed.push(el);\n              exiting.add(el);\n            }\n            handleRemoved(next, el, i);\n          }\n          if (nothingChanged && el !== next[i])\n            nothingChanged = false;\n        }\n        if (!removed.length && nothingChanged)\n          return prev;\n        onChange({ list: next, added, removed, unchanged, finishRemoved });\n        prevSet = nextSet;\n        return next;\n      });\n    },\n    options.appear ? [] : initSource.slice()\n  );\n}\n\nexport { createListTransition, createSwitchTransition };\n","// https://github.com/solidjs-community/solid-transition-group\n\nimport {type FlowComponent, type JSX} from 'solid-js';\nimport {createClassnames, enterTransition, exitTransition} from './common';\nimport {createSwitchTransition} from '@solid-primitives/transition-group';\nimport {resolveFirst} from '@solid-primitives/refs';\n\nexport type TransitionEvents = {\n  /**\n   * Function called before the enter transition starts.\n   * The {@link element} is not yet rendered.\n   */\n  onBeforeEnter?: (element: Element) => void;\n  /**\n   * Function called when the enter transition starts.\n   * The {@link element} is rendered to the DOM.\n   *\n   * Call {@link done} to end the transition - removes the enter classes,\n   * and calls {@link TransitionEvents.onAfterEnter}.\n   * If the parameter for {@link done} is not provided, it will be called on `transitionend` or `animationend`.\n   */\n  onEnter?: (element: Element, done: () => void) => void;\n  /**\n   * Function called after the enter transition ends.\n   * The {@link element} is removed from the DOM.\n   */\n  onAfterEnter?: (element: Element) => void;\n  /**\n   * Function called before the exit transition starts.\n   * The {@link element} is still rendered, exit classes are not yet applied.\n   */\n  onBeforeExit?: (element: Element) => void;\n  /**\n   * Function called when the exit transition starts, after the exit classes are applied\n   * ({@link TransitionProps.enterToClass} and {@link TransitionProps.exitActiveClass}).\n   * The {@link element} is still rendered.\n   *\n   * Call {@link done} to end the transition - removes exit classes,\n   * calls {@link TransitionEvents.onAfterExit} and removes the element from the DOM.\n   * If the parameter for {@link done} is not provided, it will be called on `transitionend` or `animationend`.\n   */\n  onExit?: (element: Element, done: () => void) => void;\n  /**\n   * Function called after the exit transition ends.\n   * The {@link element} is removed from the DOM.\n   */\n  onAfterExit?: (element: Element) => void;\n};\n\n/**\n * Props for the {@link Transition} component.\n */\nexport type TransitionProps = TransitionEvents & {\n  /**\n   * Used to automatically generate transition CSS class names.\n   * e.g. `name: 'fade'` will auto expand to `.fade-enter`, `.fade-enter-active`, etc.\n   * Defaults to `\"s\"`.\n   */\n  name?: string;\n  /**\n   * CSS class applied to the entering element for the entire duration of the enter transition.\n   * Defaults to `\"s-enter-active\"`.\n   */\n  enterActiveClass?: string;\n  /**\n   * CSS class applied to the entering element at the start of the enter transition, and removed the frame after.\n   * Defaults to `\"s-enter\"`.\n   */\n  enterClass?: string;\n  /**\n   * CSS class applied to the entering element after the enter transition starts.\n   * Defaults to `\"s-enter-to\"`.\n   */\n  enterToClass?: string;\n  /**\n   * CSS class applied to the exiting element for the entire duration of the exit transition.\n   * Defaults to `\"s-exit-active\"`.\n   */\n  exitActiveClass?: string;\n  /**\n   * CSS class applied to the exiting element at the start of the exit transition, and removed the frame after.\n   * Defaults to `\"s-exit\"`.\n   */\n  exitClass?: string;\n  /**\n   * CSS class applied to the exiting element after the exit transition starts.\n   * Defaults to `\"s-exit-to\"`.\n   */\n  exitToClass?: string;\n  /**\n   * Whether to apply transition on initial render. Defaults to `false`.\n   */\n  appear?: boolean;\n  /**\n   * Controls the timing sequence of leaving/entering transitions.\n   * Available modes are `\"outin\"` and `\"inout\"`;\n   * Defaults to simultaneous.\n   */\n  mode?: 'inout' | 'outin';\n  /**\n   * The duration of the transition, in milliseconds.\n   * Defaults to `300`.\n   */\n  duration?: number;\n};\n\nconst TRANSITION_MODE_MAP = {\n  inout: 'in-out',\n  outin: 'out-in'\n} as const;\n\n/**\n * The `<Transition>` component lets you apply enter and leave animations on element passed to `props.children`.\n *\n * It only supports transitioning a single element at a time.\n *\n * @param props {@link TransitionProps}\n */\nexport const Transition: FlowComponent<TransitionProps> = (props) => {\n  const classnames = createClassnames(props);\n\n  return createSwitchTransition(\n    resolveFirst(() => props.children),\n    {\n      mode: TRANSITION_MODE_MAP[props.mode!],\n      appear: props.appear,\n      onEnter(el, done) {\n        enterTransition(classnames(), props, el, done, props.duration);\n      },\n      onExit(el, done) {\n        exitTransition(classnames(), props, el, done, props.duration);\n      }\n    }\n  ) as unknown as JSX.Element;\n};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport {renderImageFromUrlPromise} from '../../helpers/dom/renderImageFromUrl';\nimport mediaSizes, {ScreenSize} from '../../helpers/mediaSizes';\nimport windowSize from '../../helpers/windowSize';\nimport IS_IMAGE_BITMAP_SUPPORTED from '../../environment/imageBitmapSupport';\nimport {IS_FIREFOX} from '../../environment/userAgent';\n\nconst SCALE_PATTERN = false;\nconst USE_BITMAP = IS_IMAGE_BITMAP_SUPPORTED && IS_FIREFOX;\n\ntype ChatBackgroundPatternRendererInitOptions = {\n  element: HTMLElement;\n  url: string,\n  width: number,\n  height: number,\n  mask?: boolean\n};\n\nexport default class ChatBackgroundPatternRenderer {\n  private static INSTANCES: ChatBackgroundPatternRenderer[] = [];\n\n  // private pattern: CanvasPattern;\n  // private objectUrl: string;\n  private options: ChatBackgroundPatternRendererInitOptions;\n  private canvases: Set<HTMLCanvasElement>;\n  // private createCanvasPatternPromise: Promise<CanvasPattern>;\n  // private exportCanvasPatternToImagePromise: Promise<string>;\n  private renderImageFromUrlPromise: Promise<HTMLImageElement>;\n  private image: HTMLImageElement;\n  private imageBitmap: ImageBitmap;\n\n  constructor() {\n    this.canvases = new Set();\n  }\n\n  public static getInstance(options: ChatBackgroundPatternRendererInitOptions) {\n    let instance = this.INSTANCES.find((instance) => {\n      return instance.options.element === options.element && deepEqual(instance.options, options, ['element']);\n    });\n\n    if(!instance) {\n      instance = new ChatBackgroundPatternRenderer();\n      instance.init(options);\n      this.INSTANCES.push(instance);\n    }\n\n    return instance;\n  }\n\n  public init(options: ChatBackgroundPatternRendererInitOptions) {\n    // if(this.options) {\n    //   if(this.options.width !== options.width || this.options.height !== options.height) {\n    //     this.createCanvasPatternPromise =\n    //       this.pattern =\n    //       this.exportCanvasPatternToImagePromise =\n    //       undefined;\n    //   }\n    // }\n\n    this.options = options;\n  }\n\n  public renderToCanvas(canvas: HTMLCanvasElement) {\n    // return this.createCanvasPattern(canvas).then(() => {\n    // return this.fillCanvas(canvas);\n    // });\n\n    return this.renderImageFromUrl(this.options.url).then(() => {\n      return this.fillCanvas(canvas);\n    });\n  }\n\n  private renderImageFromUrl(url: string) {\n    if(this.renderImageFromUrlPromise) return this.renderImageFromUrlPromise;\n    const img = this.image = document.createElement('img');\n    img.crossOrigin = 'anonymous';\n    return this.renderImageFromUrlPromise = renderImageFromUrlPromise(img, url, false).then(() => {\n      if(!IS_IMAGE_BITMAP_SUPPORTED || !USE_BITMAP) {\n        return img;\n      }\n\n      return createImageBitmap(img, {\n        resizeWidth: 1440,\n        resizeHeight: 2960\n      }).then((imageBitmap) => {\n        this.imageBitmap = imageBitmap;\n        return img;\n      });\n    });\n  }\n\n  /* private createCanvasPattern(canvas: HTMLCanvasElement) {\n    if(this.createCanvasPatternPromise) return this.createCanvasPatternPromise;\n    return this.createCanvasPatternPromise = this.renderImageFromUrl(this.options.url).then((img) => {\n      let createPatternFrom: HTMLImageElement | HTMLCanvasElement;\n      if(IS_SAFARI) {\n        const canvas = createPatternFrom = document.createElement('canvas');\n        canvas.width = img.naturalWidth;\n        canvas.height = img.naturalHeight;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      } else {\n        createPatternFrom = img;\n      }\n\n      const perf = performance.now();\n      this.pattern = canvas.getContext('2d').createPattern(createPatternFrom, 'repeat-x');\n      console.warn('creating pattern time:', performance.now() - perf);\n\n      return this.pattern;\n    });\n  }\n\n  public exportCanvasPatternToImage(canvas: HTMLCanvasElement) {\n    if(this.exportCanvasPatternToImagePromise) return this.exportCanvasPatternToImagePromise;\n    return this.exportCanvasPatternToImagePromise = new Promise<string>((resolve) => {\n      canvas.toBlob((blob) => {\n        const newUrl = this.objectUrl = URL.createObjectURL(blob);\n        resolve(newUrl);\n      }, 'image/png');\n    });\n  } */\n\n  public cleanup(canvas: HTMLCanvasElement) {\n    this.canvases.delete(canvas);\n\n    if(!this.canvases.size) {\n      indexOfAndSplice(ChatBackgroundPatternRenderer.INSTANCES, this);\n\n      this.imageBitmap?.close();\n      // if(this.objectUrl) {\n      //   URL.revokeObjectURL(this.objectUrl);\n      // }\n    }\n  }\n\n  public fillCanvas(canvas: HTMLCanvasElement) {\n    const context = canvas.getContext('2d');\n    const {width, height} = canvas;\n    // const perf = performance.now();\n    // if(context.fillStyle instanceof CanvasPattern) {\n    //   context.clearRect(0, 0, width, height);\n    // }\n\n    const source = this.imageBitmap || this.image;\n\n    let imageWidth = source.width, imageHeight = source.height;\n    // let patternHeight = 1480 * canvas.dpr;\n    // if(+canvas.dataset.originalHeight !== height) patternHeight *= .6875;\n    const patternHeight = (500 + (windowSize.height / 2.5)) * canvas.dpr;\n    const ratio = patternHeight / imageHeight;\n    imageWidth *= ratio;\n    imageHeight = patternHeight;\n\n    if(this.options.mask) {\n      context.fillStyle = '#000';\n      context.fillRect(0, 0, width, height);\n      context.globalCompositeOperation = 'destination-out';\n    } else {\n      context.globalCompositeOperation = 'source-over';\n    }\n\n    const d = (y: number) => {\n      for(let x = 0; x < width; x += imageWidth) {\n        context.drawImage(source, x, y, imageWidth, imageHeight);\n      }\n    };\n\n    const centerY = (height - imageHeight) / 2;\n    d(centerY);\n\n    if(centerY > 0) {\n      let topY = centerY;\n      do {\n        d(topY -= imageHeight);\n      } while(topY >= 0);\n    }\n\n    const endY = height - 1;\n    for(let bottomY = centerY + imageHeight; bottomY < endY; bottomY += imageHeight) {\n      d(bottomY);\n    }\n\n    // for(let x = 0; x < width; x += imageWidth) {\n    //   for(let y = 0; y < height; y += imageHeight) {\n    //     context.drawImage(img, x, y, imageWidth, imageHeight);\n    //   }\n    // }\n    // context.fillStyle = this.pattern;\n    // context.fillRect(0, 0, width, height);\n    // console.warn('fill canvas time', performance.now() - perf);\n  }\n\n  public setCanvasDimensions(canvas: HTMLCanvasElement) {\n    const devicePixelRatio = Math.min(2, window.devicePixelRatio);\n    const width = this.options.width * devicePixelRatio;\n    let height = this.options.height * devicePixelRatio;\n\n    canvas.dpr = devicePixelRatio;\n    canvas.dataset.originalHeight = '' + height;\n    if(mediaSizes.activeScreen === ScreenSize.large && SCALE_PATTERN) height *= 1.5;\n    canvas.width = width;\n    canvas.height = height;\n  }\n\n  public createCanvas() {\n    const canvas = document.createElement('canvas');\n    this.canvases.add(canvas);\n    this.setCanvasDimensions(canvas);\n    return canvas;\n  }\n\n  public resize(width: number, height: number) {\n    this.init({\n      ...this.options,\n      width,\n      height\n    });\n\n    const promises: Promise<any>[] = [];\n    for(const canvas of this.canvases) {\n      this.setCanvasDimensions(canvas);\n      promises.push(this.renderToCanvas(canvas));\n    }\n\n    return Promise.all(promises);\n  }\n\n  public static resizeInstancesOf(element: HTMLElement) {\n    const toResize = this.INSTANCES.filter(instance => instance.options.element === element);\n\n    const rect = element.getBoundingClientRect();\n\n    return Promise.all(toResize.map((instance) => instance.resize(rect.width, rect.height)));\n  }\n\n  /* public setResizeMode(resizing: boolean) {\n    const canvases = Array.from(this.canvases);\n    const canvas = canvases[canvases.length - 1];\n    canvas.style.display = resizing ? 'none' : '';\n    const img = this.img;\n    img.style.display = resizing ? '' : 'none';\n\n    return {img, canvas};\n  } */\n}\n","import {DEFAULT_BACKGROUND_SLUG} from '../config/app';\nimport blur from '../helpers/blur';\nimport type {Document, WallPaper} from '../layer';\n\nimport type AppDownloadManagerInstance from './appManagers/appDownloadManager';\nimport type {AppManagers} from './appManagers/managers';\nimport CacheStorageController from './files/cacheStorage';\nimport StaticUtilityClass from './staticUtilityClass';\n\n\nnamespace ChatBackgroundStore {\n  export type BackgroundPromises = {\n    [url: string]: MaybePromise<string>\n  };\n\n  export type GetBackgroundArgs = {\n    slug: string;\n    canDownload?: boolean;\n    blur?: boolean;\n\n    managers?: AppManagers;\n    appDownloadManager?: typeof AppDownloadManagerInstance;\n  };\n\n  export type SetBackgroundUrlToCacheArgs = {\n    slug: string;\n    url: string;\n    blur?: boolean;\n  };\n}\n\nclass ChatBackgroundStore extends StaticUtilityClass {\n  private static cacheStorage = new CacheStorageController('cachedBackgrounds');\n  private static backgroundPromises: ChatBackgroundStore.BackgroundPromises = {};\n\n  public static getWallPaperStorageUrl(slug: string, blur?: boolean) {\n    return `backgrounds/${slug}${blur ? '?blur' : ''}`;\n  }\n\n  public static hasWallPaperStorageUrl(slug: string, blur?: boolean) {\n    const storageUrl = this.getWallPaperStorageUrl(slug, blur);\n    return this.cacheStorage.has(storageUrl);\n  }\n\n  public static getBackground({\n    slug,\n    canDownload,\n    blur,\n\n    managers,\n    appDownloadManager\n  }: ChatBackgroundStore.GetBackgroundArgs) {\n    const storageUrl = this.getWallPaperStorageUrl(slug, blur);\n    const canReallyDownload = canDownload && !!managers && !!appDownloadManager;\n\n    return this.backgroundPromises[storageUrl] ||= this.cacheStorage.getFile(storageUrl).then((blob) => {\n      return this.backgroundPromises[storageUrl] = URL.createObjectURL(blob);\n    }, canReallyDownload ? async(err) => {\n      if((err as ApiError).type !== 'NO_ENTRY_FOUND') {\n        throw err;\n      }\n\n      const wallPaper = await managers.appThemesManager.getWallPaperBySlug(slug);\n      let url = await appDownloadManager.downloadMediaURL({\n        media: (wallPaper as WallPaper.wallPaper).document as Document.document\n      });\n\n      if(blur) {\n        url = await this.blurWallPaperImage(url);\n      }\n\n      this.saveWallPaperToCache(slug, url, blur);\n      return this.backgroundPromises[storageUrl] = url;\n    } : undefined);\n  }\n\n  public static blurWallPaperImage(url: string) {\n    const {canvas, promise} = blur(url, 12, 4);\n    return promise.then(() => {\n      return canvas.toDataURL();\n    });\n  }\n\n  public static saveWallPaperToCache(slug: string, url: string, blur?: boolean) {\n    if(!slug || slug === DEFAULT_BACKGROUND_SLUG) {\n      return;\n    }\n\n    return fetch(url).then((response) => {\n      return this.cacheStorage.save(this.getWallPaperStorageUrl(slug, blur), response);\n    });\n  }\n\n  public static setBackgroundUrlToCache({slug, url, blur}: ChatBackgroundStore.SetBackgroundUrlToCacheArgs) {\n    this.backgroundPromises[this.getWallPaperStorageUrl(slug, blur)] = url;\n  }\n}\n\nexport default ChatBackgroundStore;\n","export default function easeOutQuad(t: number, b: number, c: number, d: number) {\n  return t >= d ? b + c : easeOutQuadApply(t / d, c) + b;\n}\n\nexport function easeOutQuadApply(v: number, c: number) {\n  return -c * v * (v - 2);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko, Artem Kolnogorov and unknown creator of the script taken from http://useless.altervista.org/gradient.html\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {animateSingle} from '../../helpers/animation';\nimport {hexToRgb} from '../../helpers/color';\nimport {easeOutQuadApply} from '../../helpers/easing/easeOutQuad';\n\nconst WIDTH = 50;\nconst HEIGHT = WIDTH;\n\ntype Point = {x: number, y: number};\n\nexport default class ChatBackgroundGradientRenderer {\n  private readonly _width = WIDTH;\n  private readonly _height = HEIGHT;\n  private _phase: number;\n  private _tail: number;\n  private readonly _tails = 90;\n  // private readonly _scrollTails = 50;\n  private _frames: ImageData[];\n  private _colors: {r: number, g: number, b: number}[];\n  private readonly _curve = [\n    0, 0.25, 0.50, 0.75, 1, 1.5, 2, 2.5, 3, 3.5, 4, 5, 6, 7, 8, 9, 10, 11, 12,\n    13, 14, 15, 16, 17, 18, 18.3, 18.6, 18.9, 19.2, 19.5, 19.8, 20.1, 20.4, 20.7,\n    21.0, 21.3, 21.6, 21.9, 22.2, 22.5, 22.8, 23.1, 23.4, 23.7, 24.0, 24.3, 24.6,\n    24.9, 25.2, 25.5, 25.8, 26.1, 26.3, 26.4, 26.5, 26.6, 26.7, 26.8, 26.9, 27\n  ];\n  private readonly _incrementalCurve: number[];\n  private readonly _positions: Point[] = [\n    {x: 0.80, y: 0.10},\n    {x: 0.60, y: 0.20},\n    {x: 0.35, y: 0.25},\n    {x: 0.25, y: 0.60},\n    {x: 0.20, y: 0.90},\n    {x: 0.40, y: 0.80},\n    {x: 0.65, y: 0.75},\n    {x: 0.75, y: 0.40}\n  ];\n  private readonly _phases = this._positions.length;\n  // private _onWheelRAF: number;\n  // private _scrollDelta: number;\n\n  // private _ts = 0;\n  // private _fps = 15;\n  // private _frametime = 1000 / this._fps;\n  // private _raf: number;\n\n  private _canvas: HTMLCanvasElement;\n  private _ctx: CanvasRenderingContext2D;\n  private _hc: HTMLCanvasElement;\n  private _hctx: CanvasRenderingContext2D;\n\n  // private _addedScrollListener: boolean;\n  private _animatingToNextPosition: boolean;\n  private _nextPositionTail: number;\n  private _nextPositionTails: number;\n  private _nextPositionLeft: number;\n\n  constructor() {\n    const diff = this._tails / this._curve[this._curve.length - 1];\n\n    for(let i = 0, length = this._curve.length; i < length; ++i) {\n      this._curve[i] = this._curve[i] * diff;\n    }\n\n    this._incrementalCurve = this._curve.map((v, i, arr) => {\n      return v - (arr[i - 1] ?? 0);\n    });\n  }\n\n  private hexToRgb(hex: string) {\n    const result = hexToRgb(hex);\n    return {r: result[0], g: result[1], b: result[2]};\n  }\n\n  private getPositions(shift: number) {\n    const positions = this._positions.slice();\n    positions.push(...positions.splice(0, shift));\n\n    const result: typeof positions = [];\n    for(let i = 0; i < positions.length; i += 2) {\n      result.push(positions[i]);\n    }\n    return result;\n  }\n\n  private getNextPositions(phase: number, curveMax: number, curve: number[]) {\n    const pos = this.getPositions(phase);\n    if(!curve[0] && curve.length === 1) {\n      return [pos];\n    }\n\n    const nextPos = this.getPositions(++phase % this._phases);\n    const distances = nextPos.map((nextPos, idx) => {\n      return {\n        x: (nextPos.x - pos[idx].x) / curveMax,\n        y: (nextPos.y - pos[idx].y) / curveMax\n      };\n    });\n\n    const positions = curve.map((value) => {\n      return distances.map((distance, idx) => {\n        return {\n          x: pos[idx].x + distance.x * value,\n          y: pos[idx].y + distance.y * value\n        };\n      });\n    });\n\n    return positions;\n  }\n\n  private curPosition(phase: number, tail: number) {\n    const positions = this.getNextPositions(phase, this._tails, [tail]);\n    return positions[0];\n  }\n\n  private changeTail(diff: number) {\n    this._tail += diff;\n\n    while(this._tail >= this._tails) {\n      this._tail -= this._tails;\n      if(++this._phase >= this._phases) {\n        this._phase -= this._phases;\n      }\n    }\n\n    while(this._tail < 0) {\n      this._tail += this._tails;\n      if(--this._phase < 0) {\n        this._phase += this._phases;\n      }\n    }\n  }\n\n  // private onWheel = (e: {deltaY: number}) => {\n  //   if(this._animatingToNextPosition) {\n  //     return;\n  //   }\n\n  //   this._scrollDelta += e.deltaY;\n  //   if(this._onWheelRAF === undefined) {\n  //     this._onWheelRAF = requestAnimationFrame(this.drawOnWheel);\n  //   }\n  // };\n\n  private changeTailAndDraw(diff: number) {\n    this.changeTail(diff);\n    const curPos = this.curPosition(this._phase, this._tail);\n    this.drawGradient(curPos);\n  }\n\n  // private drawOnWheel = () => {\n  //   const value = this._scrollDelta / this._scrollTails;\n  //   this._scrollDelta %= this._scrollTails;\n  //   const diff = value > 0 ? Math.floor(value) : Math.ceil(value);\n  //   if(diff) {\n  //     this.changeTailAndDraw(diff);\n  //   }\n  //   this._onWheelRAF = undefined;\n  // };\n\n  private drawNextPositionAnimated = (getProgress?: () => number) => {\n    let done: boolean, id: ImageData;\n    if(getProgress) {\n      const value = getProgress();\n      done = value >= 1;\n      const transitionValue = easeOutQuadApply(value, 1);\n      const nextPositionTail = this._nextPositionTail ?? 0;\n      const tail = this._nextPositionTail = this._nextPositionTails * transitionValue;\n      const diff = tail - nextPositionTail;\n      if(diff) {\n        this._nextPositionLeft -= diff;\n        this.changeTailAndDraw(-diff);\n      }\n    } else {\n      const frames = this._frames;\n      id = frames.shift();\n      done = !frames.length;\n    }\n\n    if(id) {\n      this.drawImageData(id);\n    }\n\n    if(done) {\n      this._nextPositionLeft = undefined;\n      this._nextPositionTails = undefined;\n      this._nextPositionTail = undefined;\n      this._animatingToNextPosition = undefined;\n    }\n\n    return !done;\n  };\n\n  private getGradientImageData(positions: Point[], phase = this._phase, progress = 1 - this._tail / this._tails) {\n    const id = this._hctx.createImageData(this._width, this._height);\n    const pixels = id.data;\n    const colorsLength = this._colors.length;\n\n    const positionsForPhase = (phase: number) => {\n      const result: typeof positions = [];\n      for(let i = 0; i != 4; ++i) {\n        result[i] = {...this._positions[(phase + i * 2) % this._positions.length]};\n        result[i].y = 1.0 - result[i].y;\n      }\n      return result;\n    };\n\n    const previousPhase = (phase + 1) % this._positions.length;\n    const previous = positionsForPhase(previousPhase);\n    const current = positionsForPhase(phase);\n\n    let offset = 0;\n    for(let y = 0; y < this._height; ++y) {\n      const directPixelY = y / this._height;\n      const centerDistanceY = directPixelY - 0.5;\n      const centerDistanceY2 = centerDistanceY * centerDistanceY;\n      for(let x = 0; x < this._width; ++x) {\n        const directPixelX = x / this._width;\n        const centerDistanceX = directPixelX - 0.5;\n        const centerDistance = Math.sqrt(centerDistanceX * centerDistanceX + centerDistanceY2);\n\n        const swirlFactor = 0.35 * centerDistance;\n        const theta = swirlFactor * swirlFactor * 0.8 * 8.0;\n        const sinTheta = Math.sin(theta);\n        const cosTheta = Math.cos(theta);\n\n        const pixelX = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * cosTheta - centerDistanceY * sinTheta));\n        const pixelY = Math.max(0.0, Math.min(1.0, 0.5 + centerDistanceX * sinTheta + centerDistanceY * cosTheta));\n\n        let distanceSum = 0.0;\n        let r = 0.0;\n        let g = 0.0;\n        let b = 0.0;\n        for(let i = 0; i < colorsLength; ++i) {\n          const colorX = previous[i].x + (current[i].x - previous[i].x) * progress;\n          const colorY = previous[i].y + (current[i].y - previous[i].y) * progress;\n\n          const distanceX = pixelX - colorX;\n          const distanceY = pixelY - colorY;\n\n          let distance = Math.max(0.0, 0.9 - Math.sqrt(distanceX * distanceX + distanceY * distanceY));\n          distance = distance * distance * distance * distance;\n          distanceSum += distance;\n\n          r += distance * this._colors[i].r;\n          g += distance * this._colors[i].g;\n          b += distance * this._colors[i].b;\n        }\n\n        pixels[offset++] = r / distanceSum;\n        pixels[offset++] = g / distanceSum;\n        pixels[offset++] = b / distanceSum;\n        pixels[offset++] = 0xFF;\n      }\n    }\n    return id;\n  }\n\n  private drawImageData(id: ImageData) {\n    this._hctx.putImageData(id, 0, 0);\n    this._ctx.drawImage(this._hc, 0, 0, this._width, this._height);\n  }\n\n  private drawGradient(positions: Point[]) {\n    this.drawImageData(this.getGradientImageData(positions));\n  }\n\n  // private doAnimate = () => {\n  //   const now = +Date.now();\n  //   if(!document.hasFocus() || (now - this._ts) < this._frametime) {\n  //     this._raf = requestAnimationFrame(this.doAnimate);\n  //     return;\n  //   }\n\n  //   this._ts = now;\n  //   this.changeTail(1);\n  //   const cur_pos = this.curPosition(this._phase, this._tail);\n  //   this.drawGradient(cur_pos);\n  //   this._raf = requestAnimationFrame(this.doAnimate);\n  // };\n\n  // public animate(start?: boolean) {\n  //   if(!start) {\n  //     cancelAnimationFrame(this._raf);\n  //     return;\n  //   }\n  //   this.doAnimate();\n  // }\n\n  public init(el: HTMLCanvasElement) {\n    this._frames = [];\n    this._phase = 0;\n    this._tail = 0;\n    // this._scrollDelta = 0;\n    // if(this._onWheelRAF !== undefined) {\n    //   cancelAnimationFrame(this._onWheelRAF);\n    //   this._onWheelRAF = undefined;\n    // }\n\n    const colors = el.getAttribute('data-colors').split(',');\n    this._colors = colors.map((color) => {\n      return this.hexToRgb(color);\n    });\n\n    if(!this._hc) {\n      this._hc = document.createElement('canvas');\n      this._hc.width = this._width;\n      this._hc.height = this._height;\n      this._hctx = this._hc.getContext('2d', {alpha: false});\n    }\n\n    this._canvas = el;\n    this._ctx = this._canvas.getContext('2d', {alpha: false});\n    this.update();\n  }\n\n  private update() {\n    if(this._colors.length < 2) {\n      const color = this._colors[0];\n      this._ctx.fillStyle = `rgb(${color.r}, ${color.g}, ${color.b})`;\n      this._ctx.fillRect(0, 0, this._width, this._height);\n      return;\n    }\n\n    const position = this.curPosition(this._phase, this._tail);\n    this.drawGradient(position);\n  }\n\n  public toNextPosition(getProgress?: () => number) {\n    if(this._colors.length < 2) {\n      return;\n    }\n\n    if(getProgress) {\n      this._nextPositionLeft = this._tails + (this._nextPositionLeft ?? 0);\n      this._nextPositionTails = this._nextPositionLeft;\n      this._nextPositionTail = undefined;\n      this._animatingToNextPosition = true;\n      animateSingle(this.drawNextPositionAnimated.bind(this, getProgress), this);\n      return;\n    }\n\n    const tail = this._tail;\n    const tails = this._tails;\n\n    let nextPhaseOnIdx: number;\n\n    const curve: number[] = [];\n    for(let i = 0, length = this._incrementalCurve.length; i < length; ++i) {\n      const inc = this._incrementalCurve[i];\n      let value = (curve[i - 1] ?? tail) + inc;\n\n      if(+value.toFixed(2) > tails && nextPhaseOnIdx === undefined) {\n        nextPhaseOnIdx = i;\n        value %= tails;\n      }\n\n      curve.push(value);\n    }\n\n    const currentPhaseCurve = curve.slice(0, nextPhaseOnIdx);\n    const nextPhaseCurve = nextPhaseOnIdx !== undefined ? curve.slice(nextPhaseOnIdx) : [];\n\n    [currentPhaseCurve, nextPhaseCurve].forEach((curve, idx, curves) => {\n      const last = curve[curve.length - 1];\n      if(last !== undefined && last > tails) {\n        curve[curve.length - 1] = +last.toFixed(2);\n      }\n\n      this._tail = last ?? 0;\n\n      if(!curve.length) {\n        return;\n      }\n\n      const positions = this.getNextPositions(this._phase, tails, curve);\n      if(idx !== (curves.length - 1)) {\n        if(++this._phase >= this._phases) {\n          this._phase -= this._phases;\n        }\n      }\n\n      const ids = positions.map((pos) => {\n        return this.getGradientImageData(pos);\n      });\n\n      this._frames.push(...ids);\n    });\n\n    this._animatingToNextPosition = true;\n    animateSingle(this.drawNextPositionAnimated, this);\n  }\n\n  // public toNextPositionThrottled = throttle(this.toNextPosition.bind(this), 100, true);\n\n  // public scrollAnimate(start?: boolean) {\n  //   return;\n\n  //   if(this._colors.length < 2 && start) {\n  //     return;\n  //   }\n\n  //   if(start && !this._addedScrollListener) {\n  //     document.addEventListener('wheel', this.onWheel);\n  //     this._addedScrollListener = true;\n  //   } else if(!start && this._addedScrollListener) {\n  //     document.removeEventListener('wheel', this.onWheel);\n  //     this._addedScrollListener = false;\n  //   }\n  // }\n\n  public cleanup() {\n    // this.scrollAnimate(false);\n    // this.animate(false);\n  }\n\n  public static createCanvas(colors?: string) {\n    const canvas = document.createElement('canvas');\n    canvas.width = WIDTH;\n    canvas.height = HEIGHT;\n    if(colors !== undefined) {\n      canvas.dataset.colors = colors;\n    }\n\n    return canvas;\n  }\n\n  public static create(colors?: string) {\n    const canvas = this.createCanvas(colors);\n    const gradientRenderer = new ChatBackgroundGradientRenderer();\n    gradientRenderer.init(canvas);\n\n    return {gradientRenderer, canvas};\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {renderImageFromUrlPromise} from './dom/renderImageFromUrl';\n\nexport function averageColorFromCanvas(canvas: HTMLCanvasElement) {\n  const context = canvas.getContext('2d');\n\n  const pixel = new Array(4).fill(0);\n  const pixels = context.getImageData(0, 0, canvas.width, canvas.height).data;\n  const pixelsLength = pixels.length / 4;\n  for(let i = 0; i < pixels.length; i += 4) {\n    // const alphaPixel = pixels[i + 3];\n    pixel[0] += pixels[i]/*  * (alphaPixel / 255) */;\n    pixel[1] += pixels[i + 1]/*  * (alphaPixel / 255) */;\n    pixel[2] += pixels[i + 2]/*  * (alphaPixel / 255) */;\n    pixel[3] += pixels[i + 3];\n  }\n\n  const outPixel = new Uint8ClampedArray(4);\n  outPixel[0] = pixel[0] / pixelsLength;\n  outPixel[1] = pixel[1] / pixelsLength;\n  outPixel[2] = pixel[2] / pixelsLength;\n  outPixel[3] = pixel[3] / pixelsLength;\n  // outPixel[3] = 255;\n  return outPixel;\n}\n\nexport function averageColorFromImageSource(imageSource: CanvasImageSource, width: number, height: number) {\n  const canvas = document.createElement('canvas');\n  const ratio = width / height;\n  const DIMENSIONS = 50;\n  if(ratio === 1) {\n    canvas.width = DIMENSIONS;\n    canvas.height = canvas.width / ratio;\n  } else if(ratio > 1) {\n    canvas.height = DIMENSIONS;\n    canvas.width = canvas.height / ratio;\n  } else {\n    canvas.width = canvas.height = DIMENSIONS;\n  }\n\n  const context = canvas.getContext('2d');\n  context.drawImage(imageSource, 0, 0, width, height, 0, 0, canvas.width, canvas.height);\n  return averageColorFromCanvas(canvas);\n}\n\nexport function averageColorFromImage(image: HTMLImageElement) {\n  return averageColorFromImageSource(image, image.naturalWidth, image.naturalHeight);\n}\n\nexport async function averageColor(imageUrl: string) {\n  const img = document.createElement('img');\n  await renderImageFromUrlPromise(img, imageUrl, false);\n  return averageColorFromImage(img);\n};\n","import {rgbaToHsla} from './color';\n\n// * https://github.com/TelegramMessenger/Telegram-iOS/blob/3d062fff78cc6b287c74e6171f855a3500c0156d/submodules/TelegramPresentationData/Sources/PresentationData.swift#L453\nexport default function highlightingColor(rgba: [number, number, number, number?]) {\n  let {h, s, l} = rgbaToHsla(rgba[0], rgba[1], rgba[2]);\n  if(s > 0) {\n    s = Math.min(100, s + 5 + 0.1 * (100 - s));\n  }\n  l = Math.max(0, l * .65);\n\n  const hsla = `hsla(${h}, ${s}%, ${l}%, .4)`;\n  return hsla;\n}\n","import {batch, createSignal, onCleanup, onMount} from 'solid-js';\nimport ChatBackgroundPatternRenderer from '../patternRenderer';\nimport {DEFAULT_BACKGROUND_SLUG} from '../../../config/app';\nimport ChatBackgroundStore from '../../../lib/chatBackgroundStore';\nimport {ThemeController} from '../../../helpers/themeController';\nimport {Theme, WallPaper} from '../../../layer';\nimport {AppTheme, SETTINGS_INIT} from '../../../config/state';\n\nimport styles from './chatBackground.module.scss';\nimport renderImageFromUrl from '../../../helpers/dom/renderImageFromUrl';\nimport {getColorsFromWallPaper} from '../../../helpers/color';\nimport ChatBackgroundGradientRenderer from '../gradientRenderer';\nimport classNames from '../../../helpers/string/classNames';\nimport {AppManagers} from '../../../lib/appManagers/managers';\nimport {appState} from '../../../stores/appState';\nimport {averageColorFromCanvas, averageColorFromImage} from '../../../helpers/averageColor';\nimport highlightingColor from '../../../helpers/highlightingColor';\n\nasync function getBackgroundParameters(options: {\n  themeController: ThemeController\n  managers: AppManagers\n  peerId?: PeerId\n}) {\n  const {\n    themeController,\n    managers,\n    peerId\n  } = options;\n\n  let theme: AppTheme | Theme = themeController.getTheme();\n  let wallPaper = themeController.getThemeSettings(theme).wallpaper as WallPaper.wallPaper;\n\n  if(peerId && peerId.isUser()) {\n    const full = await managers.appProfileManager.getCachedFullUser(peerId.toUserId())\n    if(full?.wallpaper) {\n      wallPaper = full.wallpaper as WallPaper.wallPaper;\n    } else if(full?.theme_emoticon) {\n      const acctTheme = appState.accountThemes.themes?.find((theme) => theme.emoticon === full.theme_emoticon);\n      if(acctTheme) {\n        theme = acctTheme;\n        const themeWallPaper = acctTheme?.settings.find(it => it.wallpaper)?.wallpaper;\n        if(themeWallPaper) {\n          wallPaper = themeWallPaper as WallPaper.wallPaper;\n        }\n      }\n    }\n  }\n\n  let backgroundUrl: string;\n  try {\n    backgroundUrl = getBackgroundURL(wallPaper.slug, wallPaper.settings?.pFlags.blur); // expected to throw if no cache available\n  } catch{\n    backgroundUrl = getBackgroundURL(DEFAULT_BACKGROUND_SLUG);\n  }\n\n  const isPattern = !!(wallPaper as WallPaper.wallPaper)?.pFlags?.pattern;\n  const intensity = wallPaper.settings?.intensity && wallPaper.settings.intensity / 100;\n  const isDarkPattern = !!intensity && intensity < 0;\n\n  return {\n    theme,\n    backgroundUrl,\n    isPattern,\n    isDarkPattern,\n    intensity,\n    wallPaper\n  };\n}\n\nfunction getBackgroundURL(slug: string, blur?: boolean) {\n  if(slug === DEFAULT_BACKGROUND_SLUG) {\n    return 'assets/img/pattern.svg'\n  }\n\n  /**\n     * This delays when the background appears and makes it blink after refresh ☹️\n     */\n  // const hasInCache = await ChatBackgroundStore.hasWallPaperStorageUrl(slug);\n  // if(!hasInCache) throw new Error('No background with this slug found in cache');\n\n  return ChatBackgroundStore.getWallPaperStorageUrl(slug, blur);\n}\n\nasync function ensureImageLoaded(image: HTMLImageElement) {\n  if(!image.naturalWidth) {\n    await new Promise((resolve) => {\n      image.addEventListener('load', resolve, {once: true});\n    });\n  }\n}\n\nexport function ChatBackground(props: {\n  class?: string\n  themeController: ThemeController\n  managers: AppManagers\n  peerId?: PeerId\n  gradientRendererRef?: (value: ChatBackgroundGradientRenderer | undefined) => void\n  onHighlightColor?: (hsla: string) => void\n}) {\n  let container!: HTMLDivElement;\n\n  const [patternCanvas, setPatternCanvas] = createSignal<HTMLCanvasElement>();\n  const [gradientCanvas, setGradientCanvas] = createSignal<HTMLCanvasElement>();\n  const [image, setImage] = createSignal<HTMLImageElement>();\n  const [url, setUrl] = createSignal<string>();\n\n  async function createBackground() {\n    const {\n      backgroundUrl,\n      isPattern,\n      isDarkPattern,\n      intensity,\n      wallPaper\n    } = await getBackgroundParameters(props);\n\n    setUrl(backgroundUrl);\n\n    let\n      image: HTMLImageElement,\n      patternCanvas: HTMLCanvasElement,\n      gradientCanvas: HTMLCanvasElement,\n      patternRenderer: ChatBackgroundPatternRenderer\n    ;\n\n    if(backgroundUrl) {\n      if(isPattern) {\n        const rect = container.getBoundingClientRect();\n        const patternRenderer = ChatBackgroundPatternRenderer.getInstance({\n          element: container,\n          url: backgroundUrl,\n          width: rect.width,\n          height: rect.height,\n          mask: isDarkPattern\n        });\n\n        patternCanvas = patternRenderer.createCanvas();\n        patternCanvas.classList.add(styles.CanvasCommon)\n        if(!isDarkPattern) patternCanvas.classList.add(styles.blend);\n\n        patternRenderer.renderToCanvas(patternCanvas);\n      } else {\n        image = document.createElement('img');\n        image.classList.add(styles.CanvasCommon);\n        renderImageFromUrl(image, backgroundUrl);\n      }\n    }\n\n    const colors = getColorsFromWallPaper(wallPaper);\n    if(colors) {\n      const {canvas, gradientRenderer} = ChatBackgroundGradientRenderer.create(colors);\n      gradientCanvas = canvas;\n      props.gradientRendererRef?.(gradientRenderer);\n      gradientCanvas.classList.add(styles.CanvasCommon);\n    } else {\n      props.gradientRendererRef?.(undefined);\n    }\n\n    if(intensity) {\n      let setOpacityTo: HTMLElement;\n      if(image) {\n        setOpacityTo = image;\n      } else {\n        setOpacityTo = isDarkPattern ? gradientCanvas : patternCanvas;\n      }\n\n      let opacityMax = Math.abs(intensity) * (isDarkPattern ? .5 : 1);\n      if(image) {\n        opacityMax = Math.max(0.3, 1 - intensity);\n      } else if(isDarkPattern) {\n        opacityMax = Math.max(0.3, opacityMax);\n      }\n\n      setOpacityTo?.style.setProperty('--opacity-max', '' + opacityMax);\n    }\n\n    batch(() => {\n      setPatternCanvas(patternCanvas);\n      setGradientCanvas(gradientCanvas);\n      setImage(image);\n    });\n\n    if(props.onHighlightColor) {\n      let pixel: Uint8ClampedArray;\n      if(image) {\n        await ensureImageLoaded(image);\n        pixel = averageColorFromImage(image);\n      } else {\n        pixel = averageColorFromCanvas(gradientCanvas);\n      }\n\n      const hsla = highlightingColor(Array.from(pixel) as any);\n      props.onHighlightColor(hsla);\n    }\n\n    return {patternRenderer};\n  }\n\n  onMount(() => {\n    const onResize = () => {\n      ChatBackgroundPatternRenderer.resizeInstancesOf(container);\n    };\n    window.addEventListener('resize', onResize);\n\n    const promise = createBackground();\n\n    onCleanup(() => {\n      window.removeEventListener('resize', onResize);\n      promise.then(({patternRenderer}) => {\n        patternRenderer?.cleanup(patternCanvas());\n      });\n    });\n  });\n\n  return (\n    <div ref={container} class={classNames(styles.Container, props.class)}>\n      {gradientCanvas()}\n      {patternCanvas()}\n      {image()}\n      {url() && <img class={/* @once */ styles.CanvasCommon} style={{visibility: 'hidden'}} src={url()} />}\n    </div>\n  )\n}\n"],"names":["focusInput","input","placeCaretAtEnd","newEvent","createClassnames","props","createMemo","name","nextFrame","fn","enterTransition","classes","events","el","done","duration","onBeforeEnter","onEnter","onAfterEnter","timeout","endTransition","e","exitTransition","onBeforeExit","onExit","onAfterExit","noop","noopTransition","createSwitchTransition","source","options","initSource","untrack","initReturned","returned","setReturned","createSignal","isTransitionPending","useTransition","next","isExiting","after","batch","p","triggerTransitions","prev","createComputed","TRANSITION_MODE_MAP","Transition","classnames","resolveFirst","SCALE_PATTERN","USE_BITMAP","IS_IMAGE_BITMAP_SUPPORTED","IS_FIREFOX","_ChatBackgroundPatternRenderer","instance","deepEqual","canvas","url","img","renderImageFromUrlPromise","imageBitmap","indexOfAndSplice","context","width","height","imageWidth","imageHeight","patternHeight","windowSize","ratio","y","x","centerY","topY","endY","bottomY","devicePixelRatio","mediaSizes","ScreenSize","promises","element","toResize","rect","ChatBackgroundPatternRenderer","_ChatBackgroundStore","StaticUtilityClass","slug","blur","storageUrl","canDownload","managers","appDownloadManager","canReallyDownload","_a","blob","err","wallPaper","promise","DEFAULT_BACKGROUND_SLUG","response","CacheStorageController","ChatBackgroundStore","easeOutQuadApply","v","c","WIDTH","HEIGHT","ChatBackgroundGradientRenderer","getProgress","id","value","transitionValue","nextPositionTail","diff","frames","i","length","arr","hex","result","hexToRgb","shift","positions","phase","curveMax","curve","pos","distances","nextPos","idx","distance","tail","curPos","progress","pixels","colorsLength","positionsForPhase","previousPhase","previous","current","offset","centerDistanceY","centerDistanceY2","centerDistanceX","swirlFactor","theta","sinTheta","cosTheta","pixelX","pixelY","distanceSum","r","g","b","colorX","colorY","distanceX","distanceY","colors","color","position","animateSingle","tails","nextPhaseOnIdx","inc","currentPhaseCurve","nextPhaseCurve","curves","last","ids","gradientRenderer","averageColorFromCanvas","pixel","pixelsLength","outPixel","averageColorFromImageSource","imageSource","DIMENSIONS","averageColorFromImage","image","averageColor","imageUrl","highlightingColor","rgba","h","s","l","rgbaToHsla","getBackgroundParameters","themeController","peerId","theme","getTheme","getThemeSettings","wallpaper","isUser","full","appProfileManager","getCachedFullUser","toUserId","theme_emoticon","acctTheme","appState","accountThemes","themes","find","emoticon","themeWallPaper","settings","it","backgroundUrl","getBackgroundURL","pFlags","isPattern","pattern","intensity","isDarkPattern","getWallPaperStorageUrl","ensureImageLoaded","naturalWidth","Promise","resolve","addEventListener","once","ChatBackground","container","patternCanvas","setPatternCanvas","gradientCanvas","setGradientCanvas","setImage","setUrl","createBackground","patternRenderer","getBoundingClientRect","getInstance","mask","createCanvas","classList","add","styles","CanvasCommon","blend","renderToCanvas","document","createElement","renderImageFromUrl","getColorsFromWallPaper","create","gradientRendererRef","undefined","setOpacityTo","opacityMax","Math","abs","max","style","setProperty","onHighlightColor","hsla","Array","from","onMount","onResize","resizeInstancesOf","window","onCleanup","removeEventListener","then","cleanup","_el$","_tmpl$","_ref$","_$use","_$insert","_c$","_$memo","_el$2","_tmpl$2","_$className","_$effect","_$setAttribute","classNames","Container","class"],"mappings":"8WAEwB,SAAAA,GAAWC,EAAoB,EAAmB,CAIxE,GAHAA,EAAM,MAAM,EACZC,GAAgBD,CAAK,EAElB,EAAG,CAEJ,MAAME,EAAW,IAAI,cAAc,EAAE,KAAM,CAAC,EAC5CF,EAAM,cAAcE,CAAQ,CAAA,CAEhC,CCLO,SAASC,GAAiBC,EAAqD,CACpF,OAAOC,EAAW,IAAM,CAChB,MAAAC,EAAOF,EAAM,MAAQ,IACpB,MAAA,CACL,aAAcA,EAAM,kBAAoBE,EAAO,iBAAiB,MAAM,GAAG,EACzE,OAAQF,EAAM,YAAcE,EAAO,UAAU,MAAM,GAAG,EACtD,SAAUF,EAAM,cAAgBE,EAAO,aAAa,MAAM,GAAG,EAC7D,YAAaF,EAAM,iBAAmBE,EAAO,gBAAgB,MAAM,GAAG,EACtE,MAAOF,EAAM,WAAaE,EAAO,SAAS,MAAM,GAAG,EACnD,QAASF,EAAM,aAAeE,EAAO,YAAY,MAAM,GAAG,CAE5D,CAAA,CACD,CACH,CAKO,SAASC,GAAUC,EAAgB,CAClB,sBAAA,IAAM,sBAAsBA,CAAE,CAAC,CACvD,CAKO,SAASC,GACdC,EACAC,EACAC,EACAC,EACAC,EACA,CACA,KAAM,CAAC,cAAAC,EAAe,QAAAC,EAAS,aAAAC,CAAgB,EAAAN,EAE3C,IAAAO,EAGJH,IAAgBH,CAAE,EAElBA,EAAG,UAAU,IAAI,GAAGF,EAAQ,KAAK,EACjCE,EAAG,UAAU,IAAI,GAAGF,EAAQ,WAAW,EAIvC,eAAe,IAAM,CAGnB,GAAG,CAACE,EAAG,WAAY,OAAOC,IAAO,EAEvBG,IAAAJ,EAAI,IAAMO,GAAe,CAAA,CACpC,EAEDZ,GAAU,IAAM,CACdK,EAAG,UAAU,OAAO,GAAGF,EAAQ,KAAK,EACpCE,EAAG,UAAU,IAAI,GAAGF,EAAQ,OAAO,GAEhC,CAACM,GAAWA,EAAQ,OAAS,KAC3BJ,EAAA,iBAAiB,gBAAiBO,CAAa,EAC/CP,EAAA,iBAAiB,eAAgBO,CAAa,EAE9CL,IAAa,SACdI,EAAU,OAAO,WAAW,IAAMC,EAAA,EAAiBL,CAAQ,GAE/D,CACD,EAED,SAASK,EAAcC,EAAW,EAC7B,CAACA,GAAKA,EAAE,SAAWR,KACpB,aAAaM,CAAO,EACbL,IAAA,EACJD,EAAA,oBAAoB,gBAAiBO,CAAa,EAClDP,EAAA,oBAAoB,eAAgBO,CAAa,EACpDP,EAAG,UAAU,OAAO,GAAGF,EAAQ,WAAW,EAC1CE,EAAG,UAAU,OAAO,GAAGF,EAAQ,OAAO,EACtCO,IAAeL,CAAE,EACnB,CAEJ,CAKO,SAASS,GACdX,EACAC,EACAC,EACAC,EACAC,EACA,CACA,KAAM,CAAC,aAAAQ,EAAc,OAAAC,EAAQ,YAAAC,CAAe,EAAAb,EAI5C,GAAG,CAACC,EAAG,WAAY,OAAOC,IAAO,EAE7B,IAAAK,EAEJI,IAAeV,CAAE,EAEjBA,EAAG,UAAU,IAAI,GAAGF,EAAQ,IAAI,EAChCE,EAAG,UAAU,IAAI,GAAGF,EAAQ,UAAU,EAE7Ba,IAAAX,EAAI,IAAMO,GAAe,EAElCZ,GAAU,IAAM,CACdK,EAAG,UAAU,OAAO,GAAGF,EAAQ,IAAI,EACnCE,EAAG,UAAU,IAAI,GAAGF,EAAQ,MAAM,GAE/B,CAACa,GAAUA,EAAO,OAAS,KACzBX,EAAA,iBAAiB,gBAAiBO,CAAa,EAC/CP,EAAA,iBAAiB,eAAgBO,CAAa,EAE9CL,IAAa,SACdI,EAAU,OAAO,WAAW,IAAMC,EAAA,EAAiBL,CAAQ,GAE/D,CACD,EAED,SAASK,EAAcC,EAAW,EAC7B,CAACA,GAAKA,EAAE,SAAWR,KAKpB,aAAaM,CAAO,EACbL,IAAA,EACJD,EAAA,oBAAoB,gBAAiBO,CAAa,EAClDP,EAAA,oBAAoB,eAAgBO,CAAa,EACpDP,EAAG,UAAU,OAAO,GAAGF,EAAQ,UAAU,EACzCE,EAAG,UAAU,OAAO,GAAGF,EAAQ,MAAM,EACrCc,IAAcZ,CAAE,EAClB,CAEJ,CCvIA,IAAIa,GAAO,IAAM,CACjB,EACIC,EAAiB,CAACd,EAAIC,IAASA,EAAM,EACzC,SAASc,GAAuBC,EAAQC,EAAS,CAC/C,MAAMC,EAAaC,EAAQH,CAAM,EAC3BI,EAAeF,EAAa,CAACA,CAAU,EAAI,CAAE,EAI7C,CAAE,QAAAd,EAAUU,EAAgB,OAAAH,EAASG,CAAgB,EAAGG,EACxD,CAACI,EAAUC,CAAW,EAAIC,EAC9BN,EAAQ,OAAS,GAAKG,CACvB,EACK,CAACI,CAAmB,EAAIC,GAAe,EAC7C,IAAIC,EACAC,EAAY,GAChB,SAASlB,EAAeT,EAAI4B,EAAO,CACjC,GAAI,CAAC5B,EACH,OAAO4B,GAASA,EAAO,EACzBD,EAAY,GACZhB,EAAOX,EAAI,IAAM,CACf6B,EAAM,IAAM,CACVF,EAAY,GACZL,EAAaQ,GAAMA,EAAE,OAAQtB,GAAMA,IAAMR,CAAE,CAAC,EAC5C4B,GAASA,EAAO,CACxB,CAAO,CACP,CAAK,CACL,CACE,SAAS/B,EAAgB+B,EAAO,CAC9B,MAAM5B,EAAK0B,EACX,GAAI,CAAC1B,EACH,OAAO4B,GAASA,EAAO,EACzBF,EAAO,OACPJ,EAAaQ,GAAM,CAAC9B,EAAI,GAAG8B,CAAC,CAAC,EAC7B1B,EAAQJ,EAAI4B,GAASf,EAAI,CAC7B,CACE,MAAMkB,EAAqBd,EAAQ,OAAS,SAEzCe,GAASL,GAAalB,EAAeuB,EAAMnC,CAAe,EACzDoB,EAAQ,OAAS,SAElBe,GAASnC,EAAgB,IAAMY,EAAeuB,CAAI,CAAC,EAGnDA,GAAS,CACRvB,EAAeuB,CAAI,EACnBnC,EAAiB,CACvB,EAEE,OAAAoC,GACGD,GAAS,CACR,MAAMhC,EAAKgB,EAAQ,EACnB,OAAIG,EAAQK,CAAmB,GAC7BA,EAAqB,EACdQ,IAELhC,IAAOgC,IACTN,EAAO1B,EACP6B,EAAM,IAAMV,EAAQ,IAAMY,EAAmBC,CAAI,CAAC,CAAC,GAE9ChC,EACR,EACDiB,EAAQ,OAAS,OAASC,CAC3B,EACMG,CACT,CCqCA,MAAMa,GAAsB,CAC1B,MAAO,SACP,MAAO,QACT,EASaC,GAA8C3C,GAAU,CAC7D,MAAA4C,EAAa7C,GAAiBC,CAAK,EAElC,OAAAuB,GACLsB,GAAa,IAAM7C,EAAM,QAAQ,EACjC,CACE,KAAM0C,GAAoB1C,EAAM,IAAK,EACrC,OAAQA,EAAM,OACd,QAAQQ,EAAIC,EAAM,CAChBJ,GAAgBuC,IAAc5C,EAAOQ,EAAIC,EAAMT,EAAM,QAAQ,CAC/D,EACA,OAAOQ,EAAIC,EAAM,CACfQ,GAAe2B,IAAc5C,EAAOQ,EAAIC,EAAMT,EAAM,QAAQ,CAAA,CAC9D,CAEJ,CACF,ECxHM8C,GAAgB,GAChBC,GAAaC,GAA6BC,GAU3BC,EAArB,MAAqBA,CAA8B,CAajD,aAAc,CACP,KAAA,aAAe,GAAI,CAG1B,OAAc,YAAYzB,EAAmD,CAC3E,IAAI0B,EAAW,KAAK,UAAU,KAAMA,GAC3BA,EAAS,QAAQ,UAAY1B,EAAQ,SAAW2B,GAAUD,EAAS,QAAS1B,EAAS,CAAC,SAAS,CAAC,CACxG,EAED,OAAI0B,IACFA,EAAW,IAAID,EACfC,EAAS,KAAK1B,CAAO,EAChB,KAAA,UAAU,KAAK0B,CAAQ,GAGvBA,CAAA,CAGF,KAAK1B,EAAmD,CAU7D,KAAK,QAAUA,CAAA,CAGV,eAAe4B,EAA2B,CAK/C,OAAO,KAAK,mBAAmB,KAAK,QAAQ,GAAG,EAAE,KAAK,IAC7C,KAAK,WAAWA,CAAM,CAC9B,CAAA,CAGK,mBAAmBC,EAAa,CACtC,GAAG,KAAK,0BAA2B,OAAO,KAAK,0BAC/C,MAAMC,EAAM,KAAK,MAAQ,SAAS,cAAc,KAAK,EACrD,OAAAA,EAAI,YAAc,YACX,KAAK,0BAA4BC,EAA0BD,EAAKD,EAAK,EAAK,EAAE,KAAK,IACnF,CAACN,GAA6B,CAACD,GACzBQ,EAGF,kBAAkBA,EAAK,CAC5B,YAAa,KACb,aAAc,IAAA,CACf,EAAE,KAAME,IACP,KAAK,YAAcA,EACZF,EACR,CACF,CAAA,CAmCI,QAAQF,EAA2B,CACnC,KAAA,SAAS,OAAOA,CAAM,EAEvB,KAAK,SAAS,OACCK,GAAAR,EAA8B,UAAW,IAAI,EAE9D,KAAK,aAAa,MAAM,EAI1B,CAGK,WAAWG,EAA2B,CACrC,MAAAM,EAAUN,EAAO,WAAW,IAAI,EAChC,CAAC,MAAAO,EAAO,OAAAC,CAAA,EAAUR,EAMlB7B,EAAS,KAAK,aAAe,KAAK,MAExC,IAAIsC,EAAatC,EAAO,MAAOuC,EAAcvC,EAAO,OAGpD,MAAMwC,GAAiB,IAAOC,GAAW,OAAS,KAAQZ,EAAO,IAC3Da,EAAQF,EAAgBD,EAChBD,GAAAI,EACAH,EAAAC,EAEX,KAAK,QAAQ,MACdL,EAAQ,UAAY,OACpBA,EAAQ,SAAS,EAAG,EAAGC,EAAOC,CAAM,EACpCF,EAAQ,yBAA2B,mBAEnCA,EAAQ,yBAA2B,cAG/B,MAAA,EAAKQ,GAAc,CACvB,QAAQC,EAAI,EAAGA,EAAIR,EAAOQ,GAAKN,EAC7BH,EAAQ,UAAUnC,EAAQ4C,EAAGD,EAAGL,EAAYC,CAAW,CAE3D,EAEMM,GAAWR,EAASE,GAAe,EAGzC,GAFA,EAAEM,CAAO,EAENA,EAAU,EAAG,CACd,IAAIC,EAAOD,EACR,GACD,EAAEC,GAAQP,CAAW,QACfO,GAAQ,EAAA,CAGlB,MAAMC,EAAOV,EAAS,EACtB,QAAQW,EAAUH,EAAUN,EAAaS,EAAUD,EAAMC,GAAWT,EAClE,EAAES,CAAO,CACX,CAYK,oBAAoBnB,EAA2B,CACpD,MAAMoB,EAAmB,KAAK,IAAI,EAAG,OAAO,gBAAgB,EACtDb,EAAQ,KAAK,QAAQ,MAAQa,EAC/B,IAAAZ,EAAS,KAAK,QAAQ,OAASY,EAEnCpB,EAAO,IAAMoB,EACNpB,EAAA,QAAQ,eAAiB,GAAKQ,EAClCa,GAAW,aAAiBC,GAAW,MAC1CtB,EAAO,MAAQO,EACfP,EAAO,OAASQ,CAAA,CAGX,cAAe,CACd,MAAAR,EAAS,SAAS,cAAc,QAAQ,EACzC,YAAA,SAAS,IAAIA,CAAM,EACxB,KAAK,oBAAoBA,CAAM,EACxBA,CAAA,CAGF,OAAOO,EAAeC,EAAgB,CAC3C,KAAK,KAAK,CACR,GAAG,KAAK,QACR,MAAAD,EACA,OAAAC,CAAA,CACD,EAED,MAAMe,EAA2B,CAAC,EACxB,UAAAvB,KAAU,KAAK,SACvB,KAAK,oBAAoBA,CAAM,EAC/BuB,EAAS,KAAK,KAAK,eAAevB,CAAM,CAAC,EAGpC,OAAA,QAAQ,IAAIuB,CAAQ,CAAA,CAG7B,OAAc,kBAAkBC,EAAsB,CAC9C,MAAAC,EAAW,KAAK,UAAU,UAAmB3B,EAAS,QAAQ,UAAY0B,CAAO,EAEjFE,EAAOF,EAAQ,sBAAsB,EAE3C,OAAO,QAAQ,IAAIC,EAAS,IAAK3B,GAAaA,EAAS,OAAO4B,EAAK,MAAOA,EAAK,MAAM,CAAC,CAAC,CAAA,CAY3F,EAlOE7B,EAAe,UAA6C,CAAC,EAD/D,IAAqB8B,EAArB9B,ECMA,MAAM+B,EAAN,MAAMA,UAA4BC,EAAmB,CAInD,OAAc,uBAAuBC,EAAcC,EAAgB,CACjE,MAAO,eAAeD,CAAI,GAAGC,EAAO,QAAU,EAAE,EAAA,CAGlD,OAAc,uBAAuBD,EAAcC,EAAgB,CACjE,MAAMC,EAAa,KAAK,uBAAuBF,EAAMC,CAAI,EAClD,OAAA,KAAK,aAAa,IAAIC,CAAU,CAAA,CAGzC,OAAc,cAAc,CAC1B,KAAAF,EACA,YAAAG,EACA,KAAAF,EAEA,SAAAG,EACA,mBAAAC,CAAA,EACwC,OACxC,MAAMH,EAAa,KAAK,uBAAuBF,EAAMC,CAAI,EACnDK,EAAoBH,GAAe,CAAC,CAACC,GAAY,CAAC,CAACC,EAElD,OAAAE,EAAA,KAAK,oBAALL,KAAAK,EAAAL,GAAwC,KAAK,aAAa,QAAQA,CAAU,EAAE,KAAMM,GAClF,KAAK,mBAAmBN,CAAU,EAAI,IAAI,gBAAgBM,CAAI,EACpEF,EAAoB,MAAMG,GAAQ,CAC/B,GAAAA,EAAiB,OAAS,iBACtB,MAAAA,EAGR,MAAMC,EAAY,MAAMN,EAAS,iBAAiB,mBAAmBJ,CAAI,EACrE,IAAA7B,EAAM,MAAMkC,EAAmB,iBAAiB,CAClD,MAAQK,EAAkC,QAAA,CAC3C,EAED,OAAGT,IACK9B,EAAA,MAAM,KAAK,mBAAmBA,CAAG,GAGpC,KAAA,qBAAqB6B,EAAM7B,EAAK8B,CAAI,EAClC,KAAK,mBAAmBC,CAAU,EAAI/B,GAC3C,MAAS,EAAA,CAGf,OAAc,mBAAmBA,EAAa,CAC5C,KAAM,CAAC,OAAAD,EAAQ,QAAAyC,GAAWV,GAAK9B,EAAK,GAAI,CAAC,EAClC,OAAAwC,EAAQ,KAAK,IACXzC,EAAO,UAAU,CACzB,CAAA,CAGH,OAAc,qBAAqB8B,EAAc7B,EAAa8B,EAAgB,CACzE,GAAA,GAACD,GAAQA,IAASY,GAIrB,OAAO,MAAMzC,CAAG,EAAE,KAAM0C,GACf,KAAK,aAAa,KAAK,KAAK,uBAAuBb,EAAMC,CAAI,EAAGY,CAAQ,CAChF,CAAA,CAGH,OAAc,wBAAwB,CAAC,KAAAb,EAAM,IAAA7B,EAAK,KAAA8B,GAAwD,CACxG,KAAK,mBAAmB,KAAK,uBAAuBD,EAAMC,CAAI,CAAC,EAAI9B,CAAA,CAEvE,EAhEiB2B,EAAA,aAAe,IAAIgB,GAAuB,mBAAmB,EAC5EhB,EAAe,mBAA6D,CAAC,EAF/E,IAAMiB,EAANjB,2HC3BgB,SAAAkB,GAAiBC,EAAWC,EAAW,CAC9C,MAAA,GAAKD,GAAKA,EAAI,EACvB,CCIA,MAAME,EAAQ,GACRC,EAASD,EAIf,MAAqBE,CAA+B,CA8ClD,aAAc,CA7Cd,KAAiB,OAASF,EAC1B,KAAiB,QAAUC,EAG3B,KAAiB,OAAS,GAI1B,KAAiB,OAAS,CACxB,EAAG,IAAM,GAAM,IAAM,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GACvE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KACxE,GAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KACxE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,EAC1E,EAEA,KAAiB,WAAsB,CACrC,CAAC,EAAG,GAAM,EAAG,EAAI,EACjB,CAAC,EAAG,GAAM,EAAG,EAAI,EACjB,CAAC,EAAG,IAAM,EAAG,GAAI,EACjB,CAAC,EAAG,IAAM,EAAG,EAAI,EACjB,CAAC,EAAG,GAAM,EAAG,EAAI,EACjB,CAAC,EAAG,GAAM,EAAG,EAAI,EACjB,CAAC,EAAG,IAAM,EAAG,GAAI,EACjB,CAAC,EAAG,IAAM,EAAG,EAAI,CACnB,EACiB,KAAA,QAAU,KAAK,WAAW,OA4HnC,KAAA,yBAA4BE,GAA+B,CACjE,IAAIhG,EAAeiG,EACnB,GAAGD,EAAa,CACd,MAAME,EAAQF,EAAY,EAC1BhG,EAAOkG,GAAS,EACV,MAAAC,EAAkBT,GAAiBQ,CAAQ,EAC3CE,EAAmB,KAAK,mBAAqB,EAE7CC,GADO,KAAK,kBAAoB,KAAK,mBAAqBF,GAC5CC,EACjBC,IACD,KAAK,mBAAqBA,EACrB,KAAA,kBAAkB,CAACA,CAAI,EAC9B,KACK,CACL,MAAMC,EAAS,KAAK,QACpBL,EAAKK,EAAO,MAAM,EAClBtG,EAAO,CAACsG,EAAO,MAAA,CAGjB,OAAGL,GACD,KAAK,cAAcA,CAAE,EAGpBjG,IACD,KAAK,kBAAoB,OACzB,KAAK,mBAAqB,OAC1B,KAAK,kBAAoB,OACzB,KAAK,yBAA2B,QAG3B,CAACA,CACV,EAtIQ,MAAAqG,EAAO,KAAK,OAAS,KAAK,OAAO,KAAK,OAAO,OAAS,CAAC,EAErD,QAAAE,EAAI,EAAGC,EAAS,KAAK,OAAO,OAAQD,EAAIC,EAAQ,EAAED,EACxD,KAAK,OAAOA,CAAC,EAAI,KAAK,OAAOA,CAAC,EAAIF,EAGpC,KAAK,kBAAoB,KAAK,OAAO,IAAI,CAACV,EAAG,EAAGc,IACvCd,GAAKc,EAAI,EAAI,CAAC,GAAK,EAC3B,CAAA,CAGK,SAASC,EAAa,CACtB,MAAAC,EAASC,GAASF,CAAG,EAC3B,MAAO,CAAC,EAAGC,EAAO,CAAC,EAAG,EAAGA,EAAO,CAAC,EAAG,EAAGA,EAAO,CAAC,CAAC,CAAA,CAG1C,aAAaE,EAAe,CAC5B,MAAAC,EAAY,KAAK,WAAW,MAAM,EACxCA,EAAU,KAAK,GAAGA,EAAU,OAAO,EAAGD,CAAK,CAAC,EAE5C,MAAMF,EAA2B,CAAC,EAClC,QAAQJ,EAAI,EAAGA,EAAIO,EAAU,OAAQP,GAAK,EACjCI,EAAA,KAAKG,EAAUP,CAAC,CAAC,EAEnB,OAAAI,CAAA,CAGD,iBAAiBI,EAAeC,EAAkBC,EAAiB,CACnE,MAAAC,EAAM,KAAK,aAAaH,CAAK,EACnC,GAAG,CAACE,EAAM,CAAC,GAAKA,EAAM,SAAW,EAC/B,MAAO,CAACC,CAAG,EAIb,MAAMC,EADU,KAAK,aAAa,EAAEJ,EAAQ,KAAK,OAAO,EAC9B,IAAI,CAACK,EAASC,KAC/B,CACL,GAAID,EAAQ,EAAIF,EAAIG,CAAG,EAAE,GAAKL,EAC9B,GAAII,EAAQ,EAAIF,EAAIG,CAAG,EAAE,GAAKL,CAChC,EACD,EAWM,OATWC,EAAM,IAAKf,GACpBiB,EAAU,IAAI,CAACG,EAAUD,KACvB,CACL,EAAGH,EAAIG,CAAG,EAAE,EAAIC,EAAS,EAAIpB,EAC7B,EAAGgB,EAAIG,CAAG,EAAE,EAAIC,EAAS,EAAIpB,CAC/B,EACD,CACF,CAEM,CAGD,YAAYa,EAAeQ,EAAc,CAE/C,OADkB,KAAK,iBAAiBR,EAAO,KAAK,OAAQ,CAACQ,CAAI,CAAC,EACjD,CAAC,CAAA,CAGZ,WAAWlB,EAAc,CAGzB,IAFN,KAAK,OAASA,EAER,KAAK,OAAS,KAAK,QACvB,KAAK,OAAS,KAAK,OAChB,EAAE,KAAK,QAAU,KAAK,UACvB,KAAK,QAAU,KAAK,SAIlB,KAAA,KAAK,MAAQ,GACjB,KAAK,OAAS,KAAK,OAChB,EAAE,KAAK,OAAS,IACjB,KAAK,QAAU,KAAK,QAExB,CAcM,kBAAkBA,EAAc,CACtC,KAAK,WAAWA,CAAI,EACpB,MAAMmB,EAAS,KAAK,YAAY,KAAK,OAAQ,KAAK,KAAK,EACvD,KAAK,aAAaA,CAAM,CAAA,CA8ClB,qBAAqBV,EAAoBC,EAAQ,KAAK,OAAQU,EAAW,EAAI,KAAK,MAAQ,KAAK,OAAQ,CAC7G,MAAMxB,EAAK,KAAK,MAAM,gBAAgB,KAAK,OAAQ,KAAK,OAAO,EACzDyB,EAASzB,EAAG,KACZ0B,EAAe,KAAK,QAAQ,OAE5BC,EAAqBb,GAAkB,CAC3C,MAAMJ,EAA2B,CAAC,EAClC,QAAQJ,EAAI,EAAGA,GAAK,EAAG,EAAEA,EACvBI,EAAOJ,CAAC,EAAI,CAAC,GAAG,KAAK,YAAYQ,EAAQR,EAAI,GAAK,KAAK,WAAW,MAAM,CAAC,EACzEI,EAAOJ,CAAC,EAAE,EAAI,EAAMI,EAAOJ,CAAC,EAAE,EAEzB,OAAAI,CACT,EAEMkB,GAAiBd,EAAQ,GAAK,KAAK,WAAW,OAC9Ce,EAAWF,EAAkBC,CAAa,EAC1CE,EAAUH,EAAkBb,CAAK,EAEvC,IAAIiB,EAAS,EACb,QAAQtE,EAAI,EAAGA,EAAI,KAAK,QAAS,EAAEA,EAAG,CAEpC,MAAMuE,EADevE,EAAI,KAAK,QACS,GACjCwE,EAAmBD,EAAkBA,EAC3C,QAAQtE,EAAI,EAAGA,EAAI,KAAK,OAAQ,EAAEA,EAAG,CAEnC,MAAMwE,EADexE,EAAI,KAAK,OACS,GAGjCyE,EAAc,IAFG,KAAK,KAAKD,EAAkBA,EAAkBD,CAAgB,EAG/EG,EAAQD,EAAcA,EAAc,GAAM,EAC1CE,EAAW,KAAK,IAAID,CAAK,EACzBE,EAAW,KAAK,IAAIF,CAAK,EAEzBG,GAAS,KAAK,IAAI,EAAK,KAAK,IAAI,EAAK,GAAML,EAAkBI,EAAWN,EAAkBK,CAAQ,CAAC,EACnGG,GAAS,KAAK,IAAI,EAAK,KAAK,IAAI,EAAK,GAAMN,EAAkBG,EAAWL,EAAkBM,CAAQ,CAAC,EAEzG,IAAIG,EAAc,EACdC,EAAI,EACJC,EAAI,EACJC,EAAI,EACR,QAAQtC,EAAI,EAAGA,EAAIoB,EAAc,EAAEpB,EAAG,CACpC,MAAMuC,GAAShB,EAASvB,CAAC,EAAE,GAAKwB,EAAQxB,CAAC,EAAE,EAAIuB,EAASvB,CAAC,EAAE,GAAKkB,EAC1DsB,GAASjB,EAASvB,CAAC,EAAE,GAAKwB,EAAQxB,CAAC,EAAE,EAAIuB,EAASvB,CAAC,EAAE,GAAKkB,EAE1DuB,EAAYR,GAASM,GACrBG,EAAYR,GAASM,GAEvB,IAAAzB,EAAW,KAAK,IAAI,EAAK,GAAM,KAAK,KAAK0B,EAAYA,EAAYC,EAAYA,CAAS,CAAC,EAChF3B,EAAAA,EAAWA,EAAWA,EAAWA,EAC7BoB,GAAApB,EAEfqB,GAAKrB,EAAW,KAAK,QAAQf,CAAC,EAAE,EAChCqC,GAAKtB,EAAW,KAAK,QAAQf,CAAC,EAAE,EAChCsC,GAAKvB,EAAW,KAAK,QAAQf,CAAC,EAAE,CAAA,CAG3BmB,EAAAM,GAAQ,EAAIW,EAAID,EAChBhB,EAAAM,GAAQ,EAAIY,EAAIF,EAChBhB,EAAAM,GAAQ,EAAIa,EAAIH,EACvBhB,EAAOM,GAAQ,EAAI,GAAA,CACrB,CAEK,OAAA/B,CAAA,CAGD,cAAcA,EAAe,CACnC,KAAK,MAAM,aAAaA,EAAI,EAAG,CAAC,EAC3B,KAAA,KAAK,UAAU,KAAK,IAAK,EAAG,EAAG,KAAK,OAAQ,KAAK,OAAO,CAAA,CAGvD,aAAaa,EAAoB,CACvC,KAAK,cAAc,KAAK,qBAAqBA,CAAS,CAAC,CAAA,CAyBlD,KAAK/G,EAAuB,CACjC,KAAK,QAAU,CAAC,EAChB,KAAK,OAAS,EACd,KAAK,MAAQ,EAOb,MAAMmJ,EAASnJ,EAAG,aAAa,aAAa,EAAE,MAAM,GAAG,EACvD,KAAK,QAAUmJ,EAAO,IAAKC,GAClB,KAAK,SAASA,CAAK,CAC3B,EAEG,KAAK,MACF,KAAA,IAAM,SAAS,cAAc,QAAQ,EACrC,KAAA,IAAI,MAAQ,KAAK,OACjB,KAAA,IAAI,OAAS,KAAK,QAClB,KAAA,MAAQ,KAAK,IAAI,WAAW,KAAM,CAAC,MAAO,GAAM,GAGvD,KAAK,QAAUpJ,EACV,KAAA,KAAO,KAAK,QAAQ,WAAW,KAAM,CAAC,MAAO,GAAM,EACxD,KAAK,OAAO,CAAA,CAGN,QAAS,CACZ,GAAA,KAAK,QAAQ,OAAS,EAAG,CACpB,MAAAoJ,EAAQ,KAAK,QAAQ,CAAC,EACvB,KAAA,KAAK,UAAY,OAAOA,EAAM,CAAC,KAAKA,EAAM,CAAC,KAAKA,EAAM,CAAC,IAC5D,KAAK,KAAK,SAAS,EAAG,EAAG,KAAK,OAAQ,KAAK,OAAO,EAClD,MAAA,CAGF,MAAMC,EAAW,KAAK,YAAY,KAAK,OAAQ,KAAK,KAAK,EACzD,KAAK,aAAaA,CAAQ,CAAA,CAGrB,eAAepD,EAA4B,CAC7C,GAAA,KAAK,QAAQ,OAAS,EACvB,OAGF,GAAGA,EAAa,CACd,KAAK,kBAAoB,KAAK,QAAU,KAAK,mBAAqB,GAClE,KAAK,mBAAqB,KAAK,kBAC/B,KAAK,kBAAoB,OACzB,KAAK,yBAA2B,GAChCqD,EAAc,KAAK,yBAAyB,KAAK,KAAMrD,CAAW,EAAG,IAAI,EACzE,MAAA,CAGF,MAAMuB,EAAO,KAAK,MACZ+B,EAAQ,KAAK,OAEf,IAAAC,EAEJ,MAAMtC,EAAkB,CAAC,EACjB,QAAAV,EAAI,EAAGC,EAAS,KAAK,kBAAkB,OAAQD,EAAIC,EAAQ,EAAED,EAAG,CAChE,MAAAiD,EAAM,KAAK,kBAAkBjD,CAAC,EACpC,IAAIL,GAASe,EAAMV,EAAI,CAAC,GAAKgB,GAAQiC,EAElC,CAACtD,EAAM,QAAQ,CAAC,EAAIoD,GAASC,IAAmB,SAChCA,EAAAhD,EACRL,GAAAoD,GAGXrC,EAAM,KAAKf,CAAK,CAAA,CAGlB,MAAMuD,EAAoBxC,EAAM,MAAM,EAAGsC,CAAc,EACjDG,EAAiBH,IAAmB,OAAYtC,EAAM,MAAMsC,CAAc,EAAI,CAAC,EAErF,CAACE,EAAmBC,CAAc,EAAE,QAAQ,CAACzC,EAAOI,EAAKsC,IAAW,CAClE,MAAMC,EAAO3C,EAAMA,EAAM,OAAS,CAAC,EAOhC,GANA2C,IAAS,QAAaA,EAAON,IAC9BrC,EAAMA,EAAM,OAAS,CAAC,EAAI,CAAC2C,EAAK,QAAQ,CAAC,GAG3C,KAAK,MAAQA,GAAQ,EAElB,CAAC3C,EAAM,OACR,OAGF,MAAMH,EAAY,KAAK,iBAAiB,KAAK,OAAQwC,EAAOrC,CAAK,EAC9DI,IAASsC,EAAO,OAAS,GACvB,EAAE,KAAK,QAAU,KAAK,UACvB,KAAK,QAAU,KAAK,SAIxB,MAAME,EAAM/C,EAAU,IAAKI,GAClB,KAAK,qBAAqBA,CAAG,CACrC,EAEI,KAAA,QAAQ,KAAK,GAAG2C,CAAG,CAAA,CACzB,EAED,KAAK,yBAA2B,GAClBR,EAAA,KAAK,yBAA0B,IAAI,CAAA,CAqB5C,SAAU,CAAA,CAKjB,OAAc,aAAaH,EAAiB,CACpC,MAAAtG,EAAS,SAAS,cAAc,QAAQ,EAC9C,OAAAA,EAAO,MAAQiD,EACfjD,EAAO,OAASkD,EACboD,IAAW,SACZtG,EAAO,QAAQ,OAASsG,GAGnBtG,CAAA,CAGT,OAAc,OAAOsG,EAAiB,CAC9B,MAAAtG,EAAS,KAAK,aAAasG,CAAM,EACjCY,EAAmB,IAAI/D,EAC7B,OAAA+D,EAAiB,KAAKlH,CAAM,EAErB,CAAC,iBAAAkH,EAAkB,OAAAlH,CAAM,CAAA,CAEpC,CC/aO,SAASmH,GAAuBnH,EAA2B,CAC1D,MAAAM,EAAUN,EAAO,WAAW,IAAI,EAEhCoH,EAAQ,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,EAC3BtC,EAASxE,EAAQ,aAAa,EAAG,EAAGN,EAAO,MAAOA,EAAO,MAAM,EAAE,KACjEqH,EAAevC,EAAO,OAAS,EACrC,QAAQnB,EAAI,EAAGA,EAAImB,EAAO,OAAQnB,GAAK,EAE/ByD,EAAA,CAAC,GAAKtC,EAAOnB,CAAC,EACpByD,EAAM,CAAC,GAAKtC,EAAOnB,EAAI,CAAC,EACxByD,EAAM,CAAC,GAAKtC,EAAOnB,EAAI,CAAC,EACxByD,EAAM,CAAC,GAAKtC,EAAOnB,EAAI,CAAC,EAGpB,MAAA2D,EAAW,IAAI,kBAAkB,CAAC,EACxC,OAAAA,EAAS,CAAC,EAAIF,EAAM,CAAC,EAAIC,EACzBC,EAAS,CAAC,EAAIF,EAAM,CAAC,EAAIC,EACzBC,EAAS,CAAC,EAAIF,EAAM,CAAC,EAAIC,EACzBC,EAAS,CAAC,EAAIF,EAAM,CAAC,EAAIC,EAElBC,CACT,CAEgB,SAAAC,GAA4BC,EAAgCjH,EAAeC,EAAgB,CACnG,MAAAR,EAAS,SAAS,cAAc,QAAQ,EACxCa,EAAQN,EAAQC,EAChBiH,EAAa,GACnB,OAAG5G,IAAU,GACXb,EAAO,MAAQyH,EACRzH,EAAA,OAASA,EAAO,MAAQa,GACvBA,EAAQ,GAChBb,EAAO,OAASyH,EACTzH,EAAA,MAAQA,EAAO,OAASa,GAExBb,EAAA,MAAQA,EAAO,OAASyH,EAGjBzH,EAAO,WAAW,IAAI,EAC9B,UAAUwH,EAAa,EAAG,EAAGjH,EAAOC,EAAQ,EAAG,EAAGR,EAAO,MAAOA,EAAO,MAAM,EAC9EmH,GAAuBnH,CAAM,CACtC,CAEO,SAAS0H,GAAsBC,EAAyB,CAC7D,OAAOJ,GAA4BI,EAAOA,EAAM,aAAcA,EAAM,aAAa,CACnF,CAEA,eAAsBC,GAAaC,EAAkB,CAC7C,MAAA3H,EAAM,SAAS,cAAc,KAAK,EAClC,aAAAC,EAA0BD,EAAK2H,EAAU,EAAK,EAC7CH,GAAsBxH,CAAG,CAClC,CCvDA,SAAwB4H,GAAkBC,EAAyC,CACjF,GAAI,CAAC,EAAAC,EAAG,EAAAC,EAAG,EAAAC,CAAA,EAAKC,GAAWJ,EAAK,CAAC,EAAGA,EAAK,CAAC,EAAGA,EAAK,CAAC,CAAC,EACpD,OAAGE,EAAI,IACLA,EAAI,KAAK,IAAI,IAAKA,EAAI,EAAI,IAAO,IAAMA,EAAE,GAE3CC,EAAI,KAAK,IAAI,EAAGA,EAAI,GAAG,EAEV,QAAQF,CAAC,KAAKC,CAAC,MAAMC,CAAC,QAErC,iCCMA,eAAeE,GAAwBhK,EAIpC,CACD,KAAM,CACJiK,gBAAAA,EACAnG,SAAAA,EACAoG,OAAAA,CACF,EAAIlK,EAEJ,IAAImK,EAA0BF,EAAgBG,SAAU,EACpDhG,EAAY6F,EAAgBI,iBAAiBF,CAAK,EAAEG,UAExD,GAAGJ,GAAUA,EAAOK,SAAU,CAC5B,MAAMC,EAAO,MAAM1G,EAAS2G,kBAAkBC,kBAAkBR,EAAOS,UAAU,EACjF,GAAGH,GAAMF,UACPlG,EAAYoG,EAAKF,kBACTE,GAAMI,eAAgB,CAC9B,MAAMC,EAAYC,GAASC,cAAcC,QAAQC,KAAMd,GAAUA,EAAMe,WAAaV,EAAKI,cAAc,EACvG,GAAGC,EAAW,CACZV,EAAQU,EACR,MAAMM,EAAiBN,GAAWO,SAASH,KAAKI,GAAMA,EAAGf,SAAS,GAAGA,UAClEa,IACD/G,EAAY+G,EAEhB,CACF,CACF,CAEA,IAAIG,EACJ,GAAI,CACFA,EAAgBC,EAAiBnH,EAAUV,KAAMU,EAAUgH,UAAUI,OAAO7H,IAAI,CAClF,MAAO,CACL2H,EAAgBC,EAAiBjH,CAAuB,CAC1D,CAEA,MAAMmH,EAAY,CAAC,CAAErH,GAAmCoH,QAAQE,QAC1DC,EAAYvH,EAAUgH,UAAUO,WAAavH,EAAUgH,SAASO,UAAY,IAC5EC,EAAgB,CAAC,CAACD,GAAaA,EAAY,EAEjD,MAAO,CACLxB,MAAAA,EACAmB,cAAAA,EACAG,UAAAA,EACAG,cAAAA,EACAD,UAAAA,EACAvH,UAAAA,CACD,CACH,CAEA,SAASmH,EAAiB7H,EAAcC,EAAgB,CACtD,OAAGD,IAASY,EACH,yBASFG,EAAoBoH,uBAAuBnI,EAAMC,CAAI,CAC9D,CAEA,eAAemI,GAAkBvC,EAAyB,CACpDA,EAAMwC,cACR,MAAM,IAAIC,QAASC,GAAY,CAC7B1C,EAAM2C,iBAAiB,OAAQD,EAAS,CAACE,KAAM,EAAI,CAAC,CACtD,CAAC,CAEL,CAEO,SAASC,GAAe7N,EAO5B,CACD,IAAI8N,EAEJ,KAAM,CAACC,EAAeC,CAAgB,EAAIjM,EAAiC,EACrE,CAACkM,EAAgBC,CAAiB,EAAInM,EAAiC,EACvE,CAACiJ,EAAOmD,CAAQ,EAAIpM,EAAgC,EACpD,CAACuB,EAAK8K,CAAM,EAAIrM,EAAsB,EAE5C,eAAesM,GAAmB,CAChC,KAAM,CACJtB,cAAAA,EACAG,UAAAA,EACAG,cAAAA,EACAD,UAAAA,EACAvH,UAAAA,CACF,EAAI,MAAM4F,GAAwBzL,CAAK,EAEvCoO,EAAOrB,CAAa,EAEpB,IACE/B,EACA+C,EACAE,EACAK,EAGF,GAAGvB,EACD,GAAGG,EAAW,CACZ,MAAMnI,EAAO+I,EAAUS,sBAAuB,EACxCD,EAAkBtJ,EAA8BwJ,YAAY,CAChE3J,QAASiJ,EACTxK,IAAKyJ,EACLnJ,MAAOmB,EAAKnB,MACZC,OAAQkB,EAAKlB,OACb4K,KAAMpB,CACR,CAAC,EAEDU,EAAgBO,EAAgBI,aAAc,EAC9CX,EAAcY,UAAUC,IAAIC,EAAOC,YAAY,EAC3CzB,GAAeU,EAAcY,UAAUC,IAAIC,EAAOE,KAAK,EAE3DT,EAAgBU,eAAejB,CAAa,CAC9C,MACE/C,EAAQiE,SAASC,cAAc,KAAK,EACpClE,EAAM2D,UAAUC,IAAIC,EAAOC,YAAY,EACvCK,GAAmBnE,EAAO+B,CAAa,EAI3C,MAAMpD,EAASyF,GAAuBvJ,CAAS,EAC/C,GAAG8D,EAAQ,CACT,KAAM,CAACtG,OAAAA,EAAQkH,iBAAAA,CAAgB,EAAI/D,EAA+B6I,OAAO1F,CAAM,EAC/EsE,EAAiB5K,EACjBrD,EAAMsP,sBAAsB/E,CAAgB,EAC5C0D,EAAeU,UAAUC,IAAIC,EAAOC,YAAY,CAClD,MACE9O,EAAMsP,sBAAsBC,MAAS,EAGvC,GAAGnC,EAAW,CACZ,IAAIoC,EACDxE,EACDwE,EAAexE,EAEfwE,EAAenC,EAAgBY,EAAiBF,EAGlD,IAAI0B,EAAaC,KAAKC,IAAIvC,CAAS,GAAKC,EAAgB,GAAK,GAC1DrC,EACDyE,EAAaC,KAAKE,IAAI,GAAK,EAAIxC,CAAS,EAChCC,IACRoC,EAAaC,KAAKE,IAAI,GAAKH,CAAU,GAGvCD,GAAcK,MAAMC,YAAY,gBAAiB,GAAKL,CAAU,CAClE,CAQA,GANApN,EAAM,IAAM,CACV2L,EAAiBD,CAAa,EAC9BG,EAAkBD,CAAc,EAChCE,EAASnD,CAAK,CAChB,CAAC,EAEEhL,EAAM+P,iBAAkB,CACzB,IAAItF,EACDO,GACD,MAAMuC,GAAkBvC,CAAK,EAC7BP,EAAQM,GAAsBC,CAAK,GAEnCP,EAAQD,GAAuByD,CAAc,EAG/C,MAAM+B,EAAO7E,GAAkB8E,MAAMC,KAAKzF,CAAK,CAAQ,EACvDzK,EAAM+P,iBAAiBC,CAAI,CAC7B,CAEA,MAAO,CAAC1B,gBAAAA,CAAgB,CAC1B,CAEA6B,OAAAA,GAAQ,IAAM,CACZ,MAAMC,EAAWA,IAAM,CACrBpL,EAA8BqL,kBAAkBvC,CAAS,CAC1D,EACDwC,OAAO3C,iBAAiB,SAAUyC,CAAQ,EAE1C,MAAMtK,EAAUuI,EAAkB,EAElCkC,GAAU,IAAM,CACdD,OAAOE,oBAAoB,SAAUJ,CAAQ,EAC7CtK,EAAQ2K,KAAK,CAAC,CAACnC,gBAAAA,CAAe,IAAM,CAClCA,GAAiBoC,QAAQ3C,GAAe,CAC1C,CAAC,CACH,CAAC,CACH,CAAC,GAED,IAAA,CAAA,IAAA4C,EAAAC,GAAA,EAAAC,EACY/C,EAAS,cAAA+C,GAAAC,WAAAA,GAAAD,EAAAF,CAAA,EAAT7C,EAAS6C,EAAAI,EAAAJ,EAChB1C,EAAc,IAAA,EAAA8C,EAAAJ,EACd5C,EAAa,IAAA,EAAAgD,EAAAJ,EACb3F,EAAK,IAAA,EAAA+F,EAAAJ,GAAA,IAAA,CAAA,IAAAK,EAAAC,EACL3N,IAAAA,CAAAA,CAAAA,EAAG,CAAE,EAAA,MAAA,IAAL0N,EAAA,IAAA,IAAA,CAAA,IAAAE,EAAAC,GAAA,EAAAC,OAAAA,EAAAF,EAAiCrC,EAAOC,YAAY,EAAAoC,EAAArB,MAAAC,YAAA,aAAA,QAAA,EAAAuB,MAAAC,GAAAJ,EAAsC5N,MAAAA,EAAK,CAAA,CAAA,EAAA4N,IAAI,CAAA,GAAA,EAAA,IAAA,EAAAG,EAAAD,IAAAA,EAAAT,EAJ1EY,GAAW1C,EAAO2C,UAAWxR,EAAMyR,KAAK,CAAC,CAAA,EAAAd,CAAA,GAAA,CAOzE","x_google_ignoreList":[2]}