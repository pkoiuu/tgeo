{"version":3,"file":"tab-EDoPoXx1.js","sources":["../src/components/sidebarLeft/tabs/privacy/messages/config.ts","../src/components/sidebarLeft/tabs/privacy/messages/paidSettingsSection.tsx","../src/components/sidebarLeft/tabs/privacy/messages/useSaveSettings.ts","../src/components/staticRadio.tsx","../src/components/sidebarLeft/tabs/privacy/messages/useIsPremium.tsx","../src/components/sidebarLeft/tabs/privacy/messages/optionsSection.tsx","../src/components/sidebarLeft/tabs/privacy/messages/useStateStore.ts","../src/components/sidebarLeft/tabs/privacy/messages/utils.ts","../src/components/sidebarLeft/tabs/privacy/messages/useSettings.ts","../src/components/sidebarLeft/tabs/privacy/messages/tab.tsx"],"sourcesContent":["import {InputPrivacyKey, InputPrivacyRule} from '../../../../../layer';\n\nexport enum MessagesPrivacyOption {\n  Everybody = 1,\n  ContactsAndPremium,\n  Paid\n};\n\nexport type MessagesTabStateStore = {\n  option?: MessagesPrivacyOption;\n  stars?: number;\n  chosenPeers?: PeerId[];\n};\n\nexport const privacyRulesInputKey = 'inputPrivacyKeyNoPaidMessages' satisfies InputPrivacyKey['_'];\n\nexport const defaultPrivacyRules: InputPrivacyRule[] = [\n  // This is set by default on the server, there's an error thrown if we try to set it ourselves\n  // {\n  //   _: 'inputPrivacyValueDisallowAll'\n  // },\n  {\n    _: 'inputPrivacyValueAllowContacts'\n  }\n];\n\nexport const TRANSITION_TIME = 120;\n","import {Component, Show} from 'solid-js';\nimport {SetStoreFunction} from 'solid-js/store';\nimport {Transition} from 'solid-transition-group';\n\nimport {i18n, join} from '../../../../../lib/langPack';\n\nimport {useSuperTab} from '../../../../solidJsTabs/superTabProvider';\nimport Section from '../../../../section';\nimport Row from '../../../../rowTsx';\n\nimport useStarsCommissionAndWithdrawalPrice from './useStarsCommissionAndWithdrawalPrice';\nimport {MessagesTabStateStore, TRANSITION_TIME} from './config';\nimport {ChosenPeersByType} from './useStateStore';\nimport StarRangeInput from './starsRangeInput';\n\n\nconst PaidSettingsSection: Component<{\n  store: MessagesTabStateStore;\n  setStore: SetStoreFunction<MessagesTabStateStore>;\n  chosenPeersByType: ChosenPeersByType;\n  isPaid: boolean;\n  exitAnimationPromise: Promise<any>;\n}> = (props) => {\n  const [tab, {AppAddMembersTab}] = useSuperTab();\n\n  const {commissionPercents, willReceiveDollars} = useStarsCommissionAndWithdrawalPrice(() => props.store.stars);\n\n  const onExceptionsClick = () => {\n    tab.slider.createTab(AppAddMembersTab).open({\n      type: 'privacy',\n      skippable: true,\n      title: 'PaidMessages.RemoveFee',\n      placeholder: 'PrivacyModal.Search.Placeholder',\n      takeOut: (newPeerIds) => {\n        props.setStore('chosenPeers', newPeerIds);\n      },\n      selectedPeerIds: [...props.store.chosenPeers]\n    });\n  };\n\n\n  const chosenPeersLabel = () => {\n    if(!props.store.chosenPeers.length) return i18n('PrivacySettingsController.AddUsers');\n\n    const {users, chats} = props.chosenPeersByType;\n\n    return join([\n      users.length ? i18n('Users', [users.length]) : null,\n      chats.length ? i18n('Chats', [chats.length]) : null\n    ].filter(Boolean), false);\n  };\n\n  return (\n    <Transition\n      onEnter={async(_el, done) => {\n        const el = _el as HTMLElement;\n        el.style.opacity = '0';\n        await props.exitAnimationPromise;\n        await el.animate({opacity: [0, 1]}, {duration: TRANSITION_TIME}).finished;\n        el.style.removeProperty('opacity');\n        done();\n      }}\n      onExit={async(el, done) => {\n        await el.animate({opacity: [1, 0]}, {duration: TRANSITION_TIME}).finished;\n        done();\n      }}\n    >\n      <Show when={props.isPaid}>\n        <div>\n          <Section\n            name=\"PaidMessages.SetPrice\"\n            caption=\"PaidMessages.SetPriceDescription\"\n            captionArgs={[\n              commissionPercents(),\n              willReceiveDollars()\n            ]}\n          >\n            <StarRangeInput value={props.store.stars} onChange={props.setStore.bind(null, 'stars')} />\n          </Section>\n\n          <Section name=\"PrivacyExceptions\" caption=\"PaidMessages.RemoveFeeDescription\">\n            <Row clickable={onExceptionsClick}>\n              <Row.Title>{i18n('PaidMessages.RemoveFee')}</Row.Title>\n              <Row.RightContent><span class=\"primary\">{chosenPeersLabel()}</span></Row.RightContent>\n            </Row>\n          </Section>\n        </div>\n      </Show>\n    </Transition>\n  );\n};\n\nexport default PaidSettingsSection;\n","import {Accessor} from 'solid-js';\n\nimport {GlobalPrivacySettings, InputPrivacyRule} from '../../../../../layer';\nimport {useHotReloadGuard} from '../../../../../lib/solidjs/hotReloadGuard';\nimport setBooleanFlag from '../../../../../helpers/object/setBooleanFlag';\nimport {logger} from '../../../../../lib/logger';\n\nimport {useSuperTab} from '../../../../solidJsTabs/superTabProvider';\nimport type {AppPrivacyMessagesTab} from '../../../../solidJsTabs';\n\nimport {MessagesTabStateStore, MessagesPrivacyOption, defaultPrivacyRules, privacyRulesInputKey} from './config';\nimport {ChosenPeersByType} from './useStateStore';\n\n\nconst log = logger('useSaveSettings');\n\ntype AppPrivacyMessagesTabType = typeof AppPrivacyMessagesTab;\n\ntype UseSaveSettingsArgs = {\n  store: MessagesTabStateStore;\n  globalPrivacy: Accessor<GlobalPrivacySettings>;\n  isPaid: Accessor<boolean>;\n  hasChanges: Accessor<boolean>;\n  chosenPeersByType: Accessor<ChosenPeersByType>;\n};\n\nconst useSaveSettings = ({store, globalPrivacy, isPaid, hasChanges, chosenPeersByType}: UseSaveSettingsArgs) => {\n  const {rootScope} = useHotReloadGuard();\n  const [tab] = useSuperTab<AppPrivacyMessagesTabType>();\n\n  const saveGlobalSettings = () => {\n    const settings = structuredClone(globalPrivacy());\n\n    settings.noncontact_peers_paid_stars = isPaid() ? store.stars : 0;\n\n    settings.pFlags ??= {};\n    setBooleanFlag(settings.pFlags, 'new_noncontact_peers_require_premium', store.option === MessagesPrivacyOption.ContactsAndPremium);\n\n\n    log('saving settings :>> ', settings);\n\n    const promise = rootScope.managers.appPrivacyManager.setGlobalPrivacySettings(settings);\n\n    tab.payload.onSaved(promise);\n\n    return promise;\n  };\n\n  const savePrivacyRules = async() => {\n    const rules: InputPrivacyRule[] = [];\n\n    const {chats, users} = chosenPeersByType();\n\n    rules.push(...defaultPrivacyRules);\n\n    if(chats.length) rules.push({\n      _: 'inputPrivacyValueAllowChatParticipants',\n      chats\n    });\n    if(users.length) rules.push({\n      _: 'inputPrivacyValueAllowUsers',\n      users: await Promise.all(users.map((id) => rootScope.managers.appUsersManager.getUserInput(id)))\n    });\n\n\n    log('saving rules :>> ', rules);\n\n    return rootScope.managers.appPrivacyManager.setPrivacy(privacyRulesInputKey, rules);\n  };\n\n\n  let isSaving = false;\n\n  const saveAllSettings = async() => {\n    if(isSaving || !hasChanges()) return;\n    isSaving = true;\n\n    try {\n      await Promise.all([\n        saveGlobalSettings(),\n        isPaid() ? savePrivacyRules() : undefined\n      ]);\n      tab.close();\n    } finally {\n      isSaving = false; // Idk let the user retry if it somewhy fails)\n    }\n  };\n\n  return saveAllSettings;\n};\n\nexport default useSaveSettings;\n","import {Component, splitProps, JSX} from 'solid-js';\n\nimport styles from './staticRadio.module.scss';\n\nconst StaticRadio: Component<{\n  checked: boolean;\n  floating?: boolean;\n  class?: string;\n} & JSX.HTMLAttributes<HTMLSpanElement>> = (inProps) => {\n  const [props, spanProps] = splitProps(inProps, ['checked', 'floating', 'class', 'classList']);\n\n  return <span\n    class={styles.Radio}\n    classList={{\n      [props.class]: !!props.class,\n      [styles.checked]: props.checked,\n      [styles.floating]: props.floating,\n      'offset-left': props.floating,\n      ...props.classList\n    }}\n    {...spanProps}\n  />;\n};\n\nexport default StaticRadio;\n","import {createSignal, onCleanup} from 'solid-js';\n\nimport {useHotReloadGuard} from '../../../../../lib/solidjs/hotReloadGuard';\nimport ListenerSetter from '../../../../../helpers/listenerSetter';\n\n\nconst useIsPremium = () => {\n  const {rootScope} = useHotReloadGuard();\n\n  const [isPremium, setIsPremium] = createSignal(rootScope.premium);\n\n  // (window as any).setIsPremium = setIsPremium;\n\n  const listenerSetter = new ListenerSetter();\n\n  listenerSetter.add(rootScope)('premium_toggle', (newValue) => {\n    setIsPremium(newValue);\n  });\n\n  onCleanup(() => {\n    listenerSetter.removeAll();\n  });\n\n  return isPremium;\n};\n\nexport default useIsPremium;\n","import {Component} from 'solid-js';\nimport {SetStoreFunction} from 'solid-js/store';\nimport {Transition} from 'solid-transition-group';\n\nimport {useHotReloadGuard} from '../../../../../lib/solidjs/hotReloadGuard';\nimport anchorCallback from '../../../../../helpers/dom/anchorCallback';\nimport {i18n} from '../../../../../lib/langPack';\n\nimport {hideToast, toastNew} from '../../../../toast';\nimport StaticRadio from '../../../../staticRadio';\nimport Section from '../../../../section';\nimport Row from '../../../../rowTsx';\n\nimport {MessagesPrivacyOption, MessagesTabStateStore, TRANSITION_TIME} from './config';\nimport useIsPremium from './useIsPremium';\n\n\nconst DEFAULT_STARS_AMOUNT = 10;\n\nconst OptionsSection: Component<{\n  store: MessagesTabStateStore;\n  setStore: SetStoreFunction<MessagesTabStateStore>;\n  isPaid: boolean;\n  onExitAnimationPromise: (promise: Promise<any>) => void;\n}> = (props) => {\n  const {PopupPremium} = useHotReloadGuard();\n\n  const isPremium = useIsPremium();\n\n\n  const handlePremiumOptionClick = (callback: () => void) => () => {\n    if(isPremium()) return callback();\n\n    toastNew({\n      langPackKey: 'PrivacySettings.Messages.PremiumError',\n      langPackArguments: [\n        anchorCallback(() => {\n          hideToast();\n          PopupPremium.show({\n            feature: 'message_privacy'\n          });\n        })\n      ]\n    });\n  };\n\n  const caption = (\n    <Transition\n      mode=\"outin\"\n      onEnter={async(el, done) => {\n        await el.animate({opacity: [0, 1]}, {duration: TRANSITION_TIME}).finished;\n        done();\n      }}\n      onExit={async(el, done) => {\n        const promise = el.animate({opacity: [1, 0]}, {duration: TRANSITION_TIME}).finished;\n        props.onExitAnimationPromise(promise);\n        await promise;\n        done();\n      }}\n    >\n      {\n        !props.isPaid ?\n          i18n('Privacy.MessagesInfo', [anchorCallback(() => void PopupPremium.show())]) :\n          i18n('PaidMessages.ChargeForMessagesDescription')\n      }\n    </Transition>\n  );\n\n  return (\n    <Section\n      name=\"PrivacyMessagesTitle\"\n      caption={caption as any}\n    >\n      <Row\n        clickable={() => {\n          props.setStore('option', MessagesPrivacyOption.Everybody);\n        }}\n      >\n        <Row.CheckboxField>\n          <StaticRadio\n            floating\n            checked={props.store.option === MessagesPrivacyOption.Everybody}\n          />\n        </Row.CheckboxField>\n        <Row.Title>{i18n('PrivacySettingsController.Everbody')}</Row.Title>\n      </Row>\n      <Row\n        clickable={handlePremiumOptionClick(() => {\n          props.setStore('option', MessagesPrivacyOption.ContactsAndPremium);\n        })}\n      >\n        {isPremium() && (\n          <Row.CheckboxField>\n            <StaticRadio\n              floating\n              checked={props.store.option === MessagesPrivacyOption.ContactsAndPremium}\n            />\n          </Row.CheckboxField>\n        )}\n        {!isPremium() && <Row.Icon icon=\"premium_lock\" />}\n        <Row.Title>{i18n('Privacy.ContactsAndPremium')}</Row.Title>\n      </Row>\n      <Row\n        clickable={handlePremiumOptionClick(() => {\n          props.setStore(prev => ({\n            option: MessagesPrivacyOption.Paid,\n            stars: prev.stars || DEFAULT_STARS_AMOUNT\n          }));\n        })}\n      >\n        {isPremium() && (\n          <Row.CheckboxField>\n            <StaticRadio floating checked={props.isPaid} />\n          </Row.CheckboxField>\n        )}\n        {!isPremium() && <Row.Icon icon=\"premium_lock\" />}\n        <Row.Title>{i18n('PaidMessages.ChargeForMessages')}</Row.Title>\n      </Row>\n    </Section>\n  );\n};\n\nexport default OptionsSection;\n","import {Accessor, createComputed, createSignal, createEffect, createMemo} from 'solid-js';\nimport {createStore, reconcile} from 'solid-js/store';\n\nimport throttle from '../../../../../helpers/schedulers/throttle';\nimport deepEqual from '../../../../../helpers/object/deepEqual';\nimport {GlobalPrivacySettings} from '../../../../../layer';\n\nimport {MessagesPrivacyOption, MessagesTabStateStore} from './config';\n\n\ntype UseStateStoreArgs = {\n  isReady: Accessor<boolean>;\n  globalPrivacy: Accessor<GlobalPrivacySettings>;\n  currentOption: Accessor<MessagesPrivacyOption>;\n  currentAllowedUsers: Accessor<PeerId[]>;\n  currentAllowedChats: Accessor<PeerId[]>;\n};\n\nexport type ChosenPeersByType = {\n  chats: (string | number)[];\n  users: PeerId[];\n};\n\nconst useStateStore = ({\n  isReady,\n  globalPrivacy,\n  currentOption, currentAllowedChats, currentAllowedUsers\n}: UseStateStoreArgs) => {\n  let initialState: MessagesTabStateStore = {};\n  const [store, setStore] = createStore<MessagesTabStateStore>({});\n\n  createComputed(() => {\n    if(!isReady()) return;\n\n    initialState = {\n      option: currentOption(),\n      stars: Number(globalPrivacy().noncontact_peers_paid_stars) || undefined,\n      chosenPeers: [...currentAllowedUsers(), ...currentAllowedChats()]\n    };\n\n    setStore(reconcile(structuredClone(initialState)));\n  });\n\n\n  const [hasChanges, setHasChanges] = createSignal(false);\n  const throttledSetHasChanges = throttle(setHasChanges, 200, true);\n\n  // The header is jerking if updating the hasChanges too quickly WTF\n  createEffect(() => {\n    const ignoreKeys: (keyof MessagesTabStateStore)[] = !!!isPaid() ? ['chosenPeers', 'stars'] : [];\n\n    throttledSetHasChanges(!deepEqual(store, initialState, ignoreKeys));\n  });\n\n\n  const isPaid = createMemo(() => store.option === MessagesPrivacyOption.Paid);\n\n  const chosenPeersByType = (): ChosenPeersByType => ({\n    chats: store.chosenPeers.filter(peer => peer.isAnyChat()).map(peer => peer.toChatId()),\n    users: store.chosenPeers.filter(peer => peer.isUser())\n  });\n\n\n  return [\n    store,\n    setStore,\n    {hasChanges, isPaid, chosenPeersByType}\n  ] as const;\n};\n\n\nexport default useStateStore;\n","import {InputUser} from '../../../../../layer';\n\n// Note: after saving privacy rules, the cached users are objects instead of being numbers\nexport const getUserId = (user: InputUser.inputUser | string | number) => {\n  if(user instanceof Object) return user.user_id?.toPeerId(true);\n  return user.toPeerId(true);\n};\n","import {createResource} from 'solid-js';\n\nimport {useHotReloadGuard} from '../../../../../lib/solidjs/hotReloadGuard';\n\nimport {usePromiseCollector} from '../../../../solidJsTabs/promiseCollector';\n\nimport {privacyRulesInputKey, MessagesPrivacyOption} from './config';\nimport useIsPremium from './useIsPremium';\nimport {getUserId} from './utils';\n\n\nconst useSettings = () => {\n  const {rootScope} = useHotReloadGuard();\n  const promiseCollector = usePromiseCollector();\n\n  const isPremium = useIsPremium();\n\n\n  const [privacyRules] = createResource(() => {\n    const promise = rootScope.managers.appPrivacyManager.getPrivacy(privacyRulesInputKey);\n    promiseCollector.collect(promise);\n    return promise;\n  });\n\n  const [globalPrivacy] = createResource(() => {\n    const promise = rootScope.managers.appPrivacyManager.getGlobalPrivacySettings();\n    promiseCollector.collect(promise);\n    return promise;\n  });\n\n\n  const isReady = () => privacyRules.state === 'ready' && globalPrivacy.state === 'ready';\n\n  const currentOption = () => {\n    if(!isPremium()) return MessagesPrivacyOption.Everybody;\n\n    if(globalPrivacy().noncontact_peers_paid_stars) return MessagesPrivacyOption.Paid;\n\n    if(globalPrivacy().pFlags.new_noncontact_peers_require_premium) return MessagesPrivacyOption.ContactsAndPremium;\n\n    return MessagesPrivacyOption.Everybody;\n  };\n\n  const currentAllowedUsers = () =>\n    privacyRules()\n    ?.filter((rule) => rule._ === 'privacyValueAllowUsers')\n    ?.map(rule => rule?.users).flat()\n    ?.map(user => user.toPeerId()) || [];\n\n  const currentAllowedChats = () =>\n    privacyRules()\n    ?.find((rule) => rule._ === 'privacyValueAllowChatParticipants')?.chats\n    ?.map(getUserId)\n    ?.filter((v) => v !== undefined) || [];\n\n\n  return {\n    isReady,\n\n    globalPrivacy,\n    privacyRules,\n\n    currentOption,\n    currentAllowedUsers,\n    currentAllowedChats\n  };\n};\n\nexport default useSettings;\n","import {createEffect, createSignal, Show} from 'solid-js';\nimport {Portal} from 'solid-js/web';\n\nimport {logger} from '../../../../../lib/logger';\nimport DEBUG from '../../../../../config/debug';\n\nimport {useSuperTab} from '../../../../solidJsTabs/superTabProvider';\nimport {IconTsx} from '../../../../iconTsx';\n\nimport useIsConfirmationNeededOnClose from './useIsConfirmationNeededOnClose';\nimport AppearZoomTransition from './appearZoomTransition';\nimport PaidSettingsSection from './paidSettingsSection';\nimport useSaveSettings from './useSaveSettings';\nimport OptionsSection from './optionsSection';\nimport useStateStore from './useStateStore';\nimport useSettings from './useSettings';\nimport SaveButton from './saveButton';\n\n\nconst log = logger('MessagesPrivacyTab');\n\n\nconst MessagesTab = () => {\n  const [tab] = useSuperTab();\n\n  const {\n    isReady,\n    globalPrivacy, privacyRules,\n    currentOption, currentAllowedUsers, currentAllowedChats\n  } = useSettings();\n\n  const [store, setStore, {isPaid, hasChanges, chosenPeersByType}] = useStateStore({\n    isReady,\n    globalPrivacy,\n    currentOption, currentAllowedChats, currentAllowedUsers\n  });\n\n  const saveAllSettings = useSaveSettings({\n    store,\n    globalPrivacy,\n    isPaid,\n    hasChanges,\n    chosenPeersByType\n  });\n\n  tab.isConfirmationNeededOnClose = useIsConfirmationNeededOnClose({hasChanges, saveAllSettings, descriptionLangKey: 'UnsavedChangesDescription.Privacy'});\n\n\n  const [exitAnimationPromise, setExitAnimationPromise] = createSignal<Promise<any>>();\n\n  if(DEBUG) createEffect(() => {\n    log('privacyRules() :>> ', privacyRules());\n    log('globalPrivacy() :>> ', globalPrivacy());\n  });\n\n\n  return (\n    <Show when={isReady()}>\n      <Portal mount={tab.header}>\n        <SaveButton hasChanges={hasChanges()} onClick={() => void saveAllSettings()} />\n      </Portal>\n\n      <OptionsSection\n        isPaid={isPaid()}\n        store={store}\n        setStore={setStore}\n        onExitAnimationPromise={setExitAnimationPromise}\n      />\n\n      <PaidSettingsSection\n        isPaid={isPaid()}\n        store={store}\n        setStore={setStore}\n        chosenPeersByType={chosenPeersByType()}\n        exitAnimationPromise={exitAnimationPromise()}\n      />\n    </Show>\n  );\n};\n\nexport default MessagesTab;\n"],"names":["MessagesPrivacyOption","MessagesPrivacyOption2","privacyRulesInputKey","defaultPrivacyRules","TRANSITION_TIME","PaidSettingsSection","props","tab","AppAddMembersTab","useSuperTab","commissionPercents","willReceiveDollars","useStarsCommissionAndWithdrawalPrice","store","stars","onExceptionsClick","slider","createTab","open","type","skippable","title","placeholder","takeOut","newPeerIds","setStore","selectedPeerIds","chosenPeers","chosenPeersLabel","length","i18n","users","chats","chosenPeersByType","join","filter","Boolean","_$createComponent","Transition","onEnter","_el","done","el","style","opacity","exitAnimationPromise","animate","duration","finished","removeProperty","onExit","children","Show","when","isPaid","_el$","_tmpl$2","_$insert","Section","name","caption","captionArgs","StarRangeInput","value","onChange","bind","Row","clickable","Title","RightContent","_el$2","_tmpl$","log","logger","useSaveSettings","globalPrivacy","hasChanges","rootScope","useHotReloadGuard","saveGlobalSettings","settings","setBooleanFlag","promise","savePrivacyRules","rules","id","isSaving","StaticRadio","inProps","spanProps","splitProps","_$spread","_$mergeProps","styles","Radio","classList","class","checked","floating","useIsPremium","isPremium","setIsPremium","createSignal","premium","listenerSetter","ListenerSetter","add","newValue","onCleanup","removeAll","DEFAULT_STARS_AMOUNT","OptionsSection","PopupPremium","handlePremiumOptionClick","callback","toastNew","langPackKey","langPackArguments","anchorCallback","hideToast","show","feature","mode","onExitAnimationPromise","_$memo","Everybody","CheckboxField","option","ContactsAndPremium","Icon","icon","prev","Paid","useStateStore","isReady","currentOption","currentAllowedChats","currentAllowedUsers","initialState","createStore","createComputed","reconcile","setHasChanges","throttledSetHasChanges","throttle","createEffect","ignoreKeys","deepEqual","createMemo","peer","getUserId","user","useSettings","promiseCollector","usePromiseCollector","privacyRules","createResource","rule","v","MessagesTab","saveAllSettings","isConfirmationNeededOnClose","useIsConfirmationNeededOnClose","descriptionLangKey","setExitAnimationPromise","DEBUG","Portal","mount","header","SaveButton","onClick"],"mappings":"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"}