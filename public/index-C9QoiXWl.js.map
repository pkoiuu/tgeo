{"version":3,"file":"index-C9QoiXWl.js","sources":["../src/components/chat/suggestPostPopup/content.tsx","../src/components/chat/suggestPostPopup/index.ts"],"sourcesContent":["import {createSignal, Show} from 'solid-js';\nimport numberThousandSplitter from '../../../helpers/number/numberThousandSplitter';\nimport {attachHotClassName} from '../../../helpers/solid/classname';\nimport {I18nTsx} from '../../../helpers/solid/i18n';\nimport defineSolidElement, {PassedProps} from '../../../lib/solidjs/defineSolidElement';\nimport currencyStarIcon from '../../currencyStarIcon';\nimport ripple from '../../ripple';\nimport useAppConfig from '../../sidebarLeft/tabs/privacy/messages/useAppConfig';\nimport useStarsCommissionAndWithdrawalPrice from '../../sidebarLeft/tabs/privacy/messages/useStarsCommissionAndWithdrawalPrice';\nimport SimpleFormField from '../../simpleFormField';\nimport Space from '../../space';\nimport commonStyles from './commonStyles.module.scss';\nimport PublishTimeField from './publishTimeField';\nimport styles from './styles.module.scss';\nripple;\n\nif(import.meta.hot) import.meta.hot.accept();\n\n\nexport type SuggestPostPopupContentProps = {\n  initialStars?: number;\n  initialTimestamp?: number;\n  onFinish: (payload: FinishPayload) => void;\n};\n\nexport type FinishPayload = {\n  stars: number;\n  timestamp: number;\n};\n\nconst MIN_STARS = 5;\nconst MAX_STARS = 100_000;\n\nconst SUGGEST_CHANGE_MIN_DELAY_MINUTES = 1; // avoid suggesting in the past if the user has the popup open for too long\n\nconst SuggestPostPopupContent = defineSolidElement({\n  name: 'suggested-post-popup-content',\n  component: (props: PassedProps<SuggestPostPopupContentProps>) => {\n    attachHotClassName(props.element, styles.Container);\n\n    const [stars, setStars] = createSignal(props.initialStars ? props.initialStars + '' : '');\n    const [publishingTimestamp, setPublishingTimestamp] = createSignal<number>(\n      props.initialTimestamp && props.initialTimestamp * 1000 > Date.now() + SUGGEST_CHANGE_MIN_DELAY_MINUTES * 60 * 1000 ?\n        props.initialTimestamp :\n        undefined\n    );\n\n    const [appConfig] = useAppConfig();\n\n    const {willReceiveDollars} = useStarsCommissionAndWithdrawalPrice(() => +stars() || 0, {\n      commissionKey: 'stars_suggested_post_commission_permille'\n    });\n\n    const minStars = () => appConfig()?.stars_suggested_post_amount_min || MIN_STARS;\n    const maxStars = () => appConfig()?.stars_suggested_post_amount_max || MAX_STARS;\n\n    const isBadPrice = () => +stars() && +stars() < minStars();\n\n    const hasErrors = () => isBadPrice();\n\n    const onChange = (value: string) => {\n      setStars(!value ? value : '' + Math.min(maxStars(), +(value.replace(/\\D/g, '')) || 0));\n    };\n\n    const onFinish = () => {\n      if(hasErrors()) return;\n\n      props.onFinish({\n        stars: +stars() || undefined,\n        timestamp: publishingTimestamp() || undefined\n      });\n    };\n\n    return <>\n      <SimpleFormField\n        value={stars()}\n        onChange={onChange}\n        isError={isBadPrice()}\n      >\n        <SimpleFormField.SideContent first>\n          {currencyStarIcon({class: commonStyles.Icon})}\n        </SimpleFormField.SideContent>\n        <SimpleFormField.Input type='number' forceFieldValue />\n        <SimpleFormField.Label forceOffset={44}>\n          <I18nTsx\n            key={!isBadPrice() ? 'SuggestedPosts.EnterPrice.Label' : 'SuggestedPosts.EnterPrice.MinOffer'}\n            args={isBadPrice() ? [minStars() + ''] : undefined}\n          />\n        </SimpleFormField.Label>\n        <SimpleFormField.SideContent last>\n          <Show when={willReceiveDollars()}>\n            ~{numberThousandSplitter(willReceiveDollars(), ',')}$\n          </Show>\n        </SimpleFormField.SideContent>\n      </SimpleFormField>\n\n      <div class={styles.Caption}>\n        <I18nTsx key='SuggestedPosts.EnterPrice.Description' />\n      </div>\n\n      <Space amount='2rem' />\n\n      <PublishTimeField\n        noTimeLangKey='SuggestedPosts.PublishingTime.Anytime'\n        value={publishingTimestamp()}\n        onChange={setPublishingTimestamp}\n      />\n\n      <div class={styles.Caption}>\n        <I18nTsx key='SuggestedPosts.PublishingTime.Description' />\n      </div>\n\n      <Space amount='2rem' />\n\n      <button\n        use:ripple\n        class=\"btn-primary btn-color-primary btn-large\"\n        disabled={hasErrors()}\n        onClick={onFinish}\n      >\n        <I18nTsx key='SuggestedPosts.MakeAnOffer' />\n      </button>\n    </>;\n  }\n});\n\nexport default SuggestPostPopupContent;\n","import type SolidJSHotReloadGuardProvider from '../../../lib/solidjs/hotReloadGuardProvider';\nimport PopupElement from '../../popups';\nimport SuggestPostPopupContent, {SuggestPostPopupContentProps} from './content';\n\ntype Args = SuggestPostPopupContentProps & {\n  HotReloadGuard: typeof SolidJSHotReloadGuardProvider;\n  suggestChange?: boolean;\n};\n\nexport default class SuggestPostPopup extends PopupElement {\n  constructor({HotReloadGuard, suggestChange, onFinish, ...rest}: Args) {\n    super('suggested-post-popup', {\n      overlayClosable: true,\n      closable: true,\n      body: true,\n      title: suggestChange ? 'SuggestedPosts.SuggestAChange' : 'SuggestedPosts.SuggestAPost'\n    });\n\n    const content = new SuggestPostPopupContent;\n    content.HotReloadGuard = HotReloadGuard;\n    content.feedProps({\n      ...rest,\n      onFinish: (payload) => {\n        onFinish(payload);\n        this.hide();\n      }\n    });\n\n    this.body.append(content);\n  }\n}\n"],"names":["MIN_STARS","MAX_STARS","SUGGEST_CHANGE_MIN_DELAY_MINUTES","SuggestPostPopupContent","defineSolidElement","name","component","props","element","styles","Container","stars","setStars","createSignal","initialStars","publishingTimestamp","setPublishingTimestamp","initialTimestamp","Date","now","undefined","appConfig","useAppConfig","willReceiveDollars","useStarsCommissionAndWithdrawalPrice","commissionKey","minStars","stars_suggested_post_amount_min","maxStars","stars_suggested_post_amount_max","isBadPrice","hasErrors","onChange","value","Math","min","replace","onFinish","timestamp","_$createComponent","SimpleFormField","isError","children","SideContent","first","currencyStarIcon","class","commonStyles","Icon","Input","type","forceFieldValue","Label","forceOffset","I18nTsx","key","args","_$memo","last","Show","when","numberThousandSplitter","_el$","_tmpl$","_$effect","_$className","Caption","Space","amount","PublishTimeField","noTimeLangKey","_el$2","_el$3","_tmpl$2","$$click","ripple","disabled","_$delegateEvents","SuggestPostPopup","PopupElement","HotReloadGuard","suggestChange","rest","content","payload"],"mappings":"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"}